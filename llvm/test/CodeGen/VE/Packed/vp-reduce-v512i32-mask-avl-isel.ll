; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -O0 --march=ve -mattr=+packed %s -o=/dev/stdout | FileCheck %s

define fastcc void @test_vp_harness(<512 x i32>* %Out, <512 x i32> %i0) {
; CHECK-LABEL: test_vp_harness:
; CHECK:       # %bb.0:
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vshf %v0, %v0, %v0, 4
; CHECK-NEXT:    vst %v0, 8, %s0
; CHECK-NEXT:    b.l.t (, %s10)
  store <512 x i32> %i0, <512 x i32>* %Out
  ret void
}

;;; FMUL ;;;
define fastcc float @test_reduce_fmul(<512 x float> %v, <512 x i1> %m, i32 %n) {
; CHECK-LABEL: test_reduce_fmul:
; CHECK:       # %bb.0:
; CHECK-NEXT:    or %s5, 0, %s0
; CHECK-NEXT:    adds.w.sx %s1, 1, %s5
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    and %s0, %s0, (32)0
; CHECK-NEXT:    srl %s0, %s0, 1
; CHECK-NEXT:    or %s3, 0, %s0
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v1, (0)1, %v0
; CHECK-NEXT:    lvl %s3
; CHECK-NEXT:    vmrg %v1, 0, %v1, %vm2
; CHECK-NEXT:    lea.sl %s0, 1065353216
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    vfim.s %v1, %v1, %s2
; CHECK-NEXT:    subu.w %s1, %s3, (63)0
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    lvs %s1, %v1(%s0)
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s5
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    srl %s4, %s4, 1
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    lvl %s4
; CHECK-NEXT:    vshf %v0, %v0, %v0, 4
; CHECK-NEXT:    lvl %s3
; CHECK-NEXT:    vmrg %v0, 0, %v0, %vm3
; CHECK-NEXT:    vfim.s %v0, %v0, %s2
; CHECK-NEXT:    lvs %s0, %v0(%s0)
; CHECK-NEXT:    or %s0, 0, %s0
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    fmul.s %s1, %s0, %s1
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    b.l.t (, %s10)
  %r = call float @llvm.vp.reduce.fmul.v512f32(float 1.0, <512 x float> %v, <512 x i1> %m, i32 %n)
  ret float %r
}

define fastcc float @test_reduce_fmul_start(float %s, <512 x float> %v, <512 x i1> %m, i32 %n) {
; CHECK-LABEL: test_reduce_fmul_start:
; CHECK:       # %bb.0:
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    or %s5, 0, %s1
; CHECK-NEXT:    adds.w.sx %s1, 1, %s5
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    and %s0, %s0, (32)0
; CHECK-NEXT:    srl %s0, %s0, 1
; CHECK-NEXT:    or %s3, 0, %s0
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v1, (0)1, %v0
; CHECK-NEXT:    lvl %s3
; CHECK-NEXT:    vmrg %v1, 0, %v1, %vm2
; CHECK-NEXT:    vfim.s %v1, %v1, %s2
; CHECK-NEXT:    subu.w %s1, %s3, (63)0
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    lvs %s1, %v1(%s0)
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s5
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    srl %s4, %s4, 1
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    lvl %s4
; CHECK-NEXT:    vshf %v0, %v0, %v0, 4
; CHECK-NEXT:    lvl %s3
; CHECK-NEXT:    vmrg %v0, 0, %v0, %vm3
; CHECK-NEXT:    vfim.s %v0, %v0, %s2
; CHECK-NEXT:    lvs %s0, %v0(%s0)
; CHECK-NEXT:    or %s0, 0, %s0
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    fmul.s %s1, %s0, %s1
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    b.l.t (, %s10)
  %r = call float @llvm.vp.reduce.fmul.v512f32(float %s, <512 x float> %v, <512 x i1> %m, i32 %n)
  ret float %r
}

define fastcc float @test_reduce_fmul_fast(<512 x float> %v, <512 x i1> %m, i32 %n) {
; CHECK-LABEL: test_reduce_fmul_fast:
; CHECK:       # %bb.0:
; CHECK-NEXT:    or %s5, 0, %s0
; CHECK-NEXT:    adds.w.sx %s1, 1, %s5
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    and %s0, %s0, (32)0
; CHECK-NEXT:    srl %s0, %s0, 1
; CHECK-NEXT:    or %s3, 0, %s0
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v1, (0)1, %v0
; CHECK-NEXT:    lvl %s3
; CHECK-NEXT:    vmrg %v1, 0, %v1, %vm2
; CHECK-NEXT:    lea.sl %s0, 1065353216
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    vfim.s %v1, %v1, %s2
; CHECK-NEXT:    subu.w %s1, %s3, (63)0
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    lvs %s1, %v1(%s0)
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s5
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    srl %s4, %s4, 1
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    lvl %s4
; CHECK-NEXT:    vshf %v0, %v0, %v0, 4
; CHECK-NEXT:    lvl %s3
; CHECK-NEXT:    vmrg %v0, 0, %v0, %vm3
; CHECK-NEXT:    vfim.s %v0, %v0, %s2
; CHECK-NEXT:    lvs %s0, %v0(%s0)
; CHECK-NEXT:    or %s0, 0, %s0
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    fmul.s %s1, %s0, %s1
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    b.l.t (, %s10)
  %r = call fast float @llvm.vp.reduce.fmul.v512f32(float 1.0, <512 x float> %v, <512 x i1> %m, i32 %n)
  ret float %r
}

define fastcc float @test_reduce_fmul_start_fast(float %s, <512 x float> %v, <512 x i1> %m, i32 %n) {
; CHECK-LABEL: test_reduce_fmul_start_fast:
; CHECK:       # %bb.0:
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    or %s5, 0, %s1
; CHECK-NEXT:    adds.w.sx %s1, 1, %s5
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    and %s0, %s0, (32)0
; CHECK-NEXT:    srl %s0, %s0, 1
; CHECK-NEXT:    or %s3, 0, %s0
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v1, (0)1, %v0
; CHECK-NEXT:    lvl %s3
; CHECK-NEXT:    vmrg %v1, 0, %v1, %vm2
; CHECK-NEXT:    vfim.s %v1, %v1, %s2
; CHECK-NEXT:    subu.w %s1, %s3, (63)0
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    lvs %s1, %v1(%s0)
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s5
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    srl %s4, %s4, 1
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    lvl %s4
; CHECK-NEXT:    vshf %v0, %v0, %v0, 4
; CHECK-NEXT:    lvl %s3
; CHECK-NEXT:    vmrg %v0, 0, %v0, %vm3
; CHECK-NEXT:    vfim.s %v0, %v0, %s2
; CHECK-NEXT:    lvs %s0, %v0(%s0)
; CHECK-NEXT:    or %s0, 0, %s0
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    fmul.s %s1, %s0, %s1
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    b.l.t (, %s10)
  %r = call fast float @llvm.vp.reduce.fmul.v512f32(float %s, <512 x float> %v, <512 x i1> %m, i32 %n)
  ret float %r
}

;;; FADD ;;;
define fastcc float @test_reduce_fadd(<512 x float> %v, <512 x i1> %m, i32 %n) {
; CHECK-LABEL: test_reduce_fadd:
; CHECK:       # %bb.0:
; CHECK-NEXT:    or %s5, 0, %s0
; CHECK-NEXT:    adds.w.sx %s1, 1, %s5
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    and %s0, %s0, (32)0
; CHECK-NEXT:    srl %s0, %s0, 1
; CHECK-NEXT:    or %s3, 0, %s0
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v1, (0)1, %v0
; CHECK-NEXT:    lvl %s3
; CHECK-NEXT:    vmrg %v1, 0, %v1, %vm2
; CHECK-NEXT:    lea.sl %s0, 0
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    vfia.s %v1, %v1, %s2
; CHECK-NEXT:    subu.w %s1, %s3, (63)0
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    lvs %s1, %v1(%s0)
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s5
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    srl %s4, %s4, 1
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    lvl %s4
; CHECK-NEXT:    vshf %v0, %v0, %v0, 4
; CHECK-NEXT:    lvl %s3
; CHECK-NEXT:    vmrg %v0, 0, %v0, %vm3
; CHECK-NEXT:    vfia.s %v0, %v0, %s2
; CHECK-NEXT:    lvs %s0, %v0(%s0)
; CHECK-NEXT:    or %s0, 0, %s0
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    fadd.s %s1, %s0, %s1
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    b.l.t (, %s10)
  %r = call float @llvm.vp.reduce.fadd.v512f32(float 0.0, <512 x float> %v, <512 x i1> %m, i32 %n)
  ret float %r
}

define fastcc float @test_reduce_fadd_start(float %s, <512 x float> %v, <512 x i1> %m, i32 %n) {
; CHECK-LABEL: test_reduce_fadd_start:
; CHECK:       # %bb.0:
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    or %s5, 0, %s1
; CHECK-NEXT:    adds.w.sx %s1, 1, %s5
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    and %s0, %s0, (32)0
; CHECK-NEXT:    srl %s0, %s0, 1
; CHECK-NEXT:    or %s3, 0, %s0
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v1, (0)1, %v0
; CHECK-NEXT:    lvl %s3
; CHECK-NEXT:    vmrg %v1, 0, %v1, %vm2
; CHECK-NEXT:    vfia.s %v1, %v1, %s2
; CHECK-NEXT:    subu.w %s1, %s3, (63)0
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    lvs %s1, %v1(%s0)
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s5
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    srl %s4, %s4, 1
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    lvl %s4
; CHECK-NEXT:    vshf %v0, %v0, %v0, 4
; CHECK-NEXT:    lvl %s3
; CHECK-NEXT:    vmrg %v0, 0, %v0, %vm3
; CHECK-NEXT:    vfia.s %v0, %v0, %s2
; CHECK-NEXT:    lvs %s0, %v0(%s0)
; CHECK-NEXT:    or %s0, 0, %s0
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    fadd.s %s1, %s0, %s1
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    b.l.t (, %s10)
  %r = call float @llvm.vp.reduce.fadd.v512f32(float %s, <512 x float> %v, <512 x i1> %m, i32 %n)
  ret float %r
}

define fastcc float @test_reduce_fadd_fast(<512 x float> %v, <512 x i1> %m, i32 %n) {
; CHECK-LABEL: test_reduce_fadd_fast:
; CHECK:       # %bb.0:
; CHECK-NEXT:    # kill: def $sw0 killed $sw0 killed $sx0
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    srl %s1, %s1, 1
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vshf %v1, %v0, %v0, 4
; CHECK-NEXT:    adds.w.sx %s1, 1, %s0
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    and %s0, %s0, (32)0
; CHECK-NEXT:    srl %s0, %s0, 1
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vfsum.s %v1, %v1, %vm3
; CHECK-NEXT:    lvs %s0, %v1(0)
; CHECK-NEXT:    vfsum.s %v0, %v0, %vm2
; CHECK-NEXT:    lvs %s1, %v0(0)
; CHECK-NEXT:    or %s0, 0, %s0
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    fadd.s %s1, %s0, %s1
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    b.l.t (, %s10)
  %r = call fast float @llvm.vp.reduce.fadd.v512f32(float 0.0, <512 x float> %v, <512 x i1> %m, i32 %n)
  ret float %r
}

define fastcc float @test_reduce_fadd_start_fast(float %s, <512 x float> %v, <512 x i1> %m, i32 %n) {
; CHECK-LABEL: test_reduce_fadd_start_fast:
; CHECK:       # %bb.0:
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 killed $sx0
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    srl %s2, %s2, 1
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vshf %v1, %v0, %v0, 4
; CHECK-NEXT:    adds.w.sx %s2, 1, %s1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s2
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    srl %s1, %s1, 1
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vfsum.s %v1, %v1, %vm3
; CHECK-NEXT:    lvs %s1, %v1(0)
; CHECK-NEXT:    vfsum.s %v0, %v0, %vm2
; CHECK-NEXT:    lvs %s2, %v0(0)
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    fadd.s %s1, %s1, %s2
; CHECK-NEXT:    fadd.s %s1, %s0, %s1
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    b.l.t (, %s10)
  %r = call fast float @llvm.vp.reduce.fadd.v512f32(float %s, <512 x float> %v, <512 x i1> %m, i32 %n)
  ret float %r
}

;;; FMIN ;;;
define fastcc float @test_reduce_fmin(float %s, <512 x float> %v, <512 x i1> %m, i32 %n) {
; CHECK-LABEL: test_reduce_fmin:
; CHECK:       # %bb.0:
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 killed $sx0
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    srl %s2, %s2, 1
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vshf %v1, %v0, %v0, 4
; CHECK-NEXT:    adds.w.sx %s2, 1, %s1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s2
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    srl %s1, %s1, 1
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vfrmin.s.fst %v1, %v1, %vm3
; CHECK-NEXT:    lvs %s1, %v1(0)
; CHECK-NEXT:    vfrmin.s.fst %v0, %v0, %vm2
; CHECK-NEXT:    lvs %s2, %v0(0)
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    fmin.s %s1, %s1, %s2
; CHECK-NEXT:    fmin.s %s1, %s0, %s1
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    b.l.t (, %s10)
  %r = call float @llvm.vp.reduce.fmin.v512f32(float %s, <512 x float> %v, <512 x i1> %m, i32 %n)
  ret float %r
}

;;; FMAX ;;;
define fastcc float @test_reduce_fmax(float %s, <512 x float> %v, <512 x i1> %m, i32 %n) {
; CHECK-LABEL: test_reduce_fmax:
; CHECK:       # %bb.0:
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 killed $sx0
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    srl %s2, %s2, 1
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vshf %v1, %v0, %v0, 4
; CHECK-NEXT:    adds.w.sx %s2, 1, %s1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s2
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    srl %s1, %s1, 1
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vfrmax.s.fst %v1, %v1, %vm3
; CHECK-NEXT:    lvs %s1, %v1(0)
; CHECK-NEXT:    vfrmax.s.fst %v0, %v0, %vm2
; CHECK-NEXT:    lvs %s2, %v0(0)
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    fmax.s %s1, %s1, %s2
; CHECK-NEXT:    fmax.s %s1, %s0, %s1
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    b.l.t (, %s10)
  %r = call float @llvm.vp.reduce.fmax.v512f32(float %s, <512 x float> %v, <512 x i1> %m, i32 %n)
  ret float %r
}

;;; Integer ;;;
define fastcc i32 @test_reduce_add(i32 %s, <512 x i32> %v, <512 x i1> %m, i32 %n) {
; CHECK-LABEL: test_reduce_add:
; CHECK:       # %bb.0:
; CHECK-NEXT:    # kill: def $sw0 killed $sw0 killed $sx0
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.sx %s2, 1, %s1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s2
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    srl %s1, %s1, 1
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vshf %v1, %v0, %v0, 0
; CHECK-NEXT:    vsum.w.sx %v1, %v1, %vm2
; CHECK-NEXT:    lvs %s2, %v1(0)
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    vsum.w.sx %v0, %v0, %vm3
; CHECK-NEXT:    lvs %s1, %v0(0)
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    adds.w.sx %s1, %s1, %s2
; CHECK-NEXT:    adds.w.sx %s1, %s0, %s1
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    b.l.t (, %s10)
  %r = call i32 @llvm.vp.reduce.add.v512i32(i32 %s, <512 x i32> %v, <512 x i1> %m, i32 %n)
  ret i32 %r
}

define fastcc i32 @test_reduce_mul(i32 %s, <512 x i32> %v, <512 x i1> %m, i32 %n) {
; CHECK-LABEL: test_reduce_mul:
; CHECK:       # %bb.0:
; CHECK-NEXT:    andm %vm1, %vm0, %vm2
; CHECK-NEXT:    andm %vm4, %vm0, %vm3
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v1, (0)1, %v0
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s0, 1, (0)1
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s2
; CHECK-NEXT:    sll %s2, %s0, 32
; CHECK-NEXT:    and %s0, %s0, (32)0
; CHECK-NEXT:    or %s2, %s0, %s2
; CHECK-NEXT:    lea %s0, 256
; CHECK-NEXT:    # kill: def $sw0 killed $sw0 killed $sx0
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    pvbrd %v0, %s2
; CHECK-NEXT:    vmrg.w %v0, %v0, %v1, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v1, (0)1, %v0
; CHECK-NEXT:    lea %s2, 129
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lea %s4, 128
; CHECK-NEXT:    lvs %s4, %v1(%s4)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v2
; CHECK-NEXT:    lsv %v2(0), %s5
; CHECK-NEXT:    lsv %v2(0), %s4
; CHECK-NEXT:    lsv %v2(1), %s3
; CHECK-NEXT:    lsv %v2(1), %s2
; CHECK-NEXT:    lea %s2, 130
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(2), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(2), %s2
; CHECK-NEXT:    lea %s2, 131
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(3), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(3), %s2
; CHECK-NEXT:    lea %s2, 132
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(4), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(4), %s2
; CHECK-NEXT:    lea %s2, 133
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(5), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(5), %s2
; CHECK-NEXT:    lea %s2, 134
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(6), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(6), %s2
; CHECK-NEXT:    lea %s2, 135
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(7), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(7), %s2
; CHECK-NEXT:    lea %s2, 136
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(8), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(8), %s2
; CHECK-NEXT:    lea %s2, 137
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(9), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(9), %s2
; CHECK-NEXT:    lea %s2, 138
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(10), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(10), %s2
; CHECK-NEXT:    lea %s2, 139
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(11), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(11), %s2
; CHECK-NEXT:    lea %s2, 140
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(12), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(12), %s2
; CHECK-NEXT:    lea %s2, 141
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(13), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(13), %s2
; CHECK-NEXT:    lea %s2, 142
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(14), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(14), %s2
; CHECK-NEXT:    lea %s2, 143
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(15), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(15), %s2
; CHECK-NEXT:    lea %s2, 144
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(16), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(16), %s2
; CHECK-NEXT:    lea %s2, 145
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(17), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(17), %s2
; CHECK-NEXT:    lea %s2, 146
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(18), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(18), %s2
; CHECK-NEXT:    lea %s2, 147
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(19), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(19), %s2
; CHECK-NEXT:    lea %s2, 148
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(20), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(20), %s2
; CHECK-NEXT:    lea %s2, 149
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(21), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(21), %s2
; CHECK-NEXT:    lea %s2, 150
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(22), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(22), %s2
; CHECK-NEXT:    lea %s2, 151
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(23), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(23), %s2
; CHECK-NEXT:    lea %s2, 152
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(24), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(24), %s2
; CHECK-NEXT:    lea %s2, 153
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(25), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(25), %s2
; CHECK-NEXT:    lea %s2, 154
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(26), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(26), %s2
; CHECK-NEXT:    lea %s2, 155
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(27), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(27), %s2
; CHECK-NEXT:    lea %s2, 156
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(28), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(28), %s2
; CHECK-NEXT:    lea %s2, 157
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(29), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(29), %s2
; CHECK-NEXT:    lea %s2, 158
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(30), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(30), %s2
; CHECK-NEXT:    lea %s2, 159
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(31), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(31), %s2
; CHECK-NEXT:    lea %s2, 160
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(32), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(32), %s2
; CHECK-NEXT:    lea %s2, 161
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(33), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(33), %s2
; CHECK-NEXT:    lea %s2, 162
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(34), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(34), %s2
; CHECK-NEXT:    lea %s2, 163
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(35), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(35), %s2
; CHECK-NEXT:    lea %s2, 164
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(36), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(36), %s2
; CHECK-NEXT:    lea %s2, 165
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(37), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(37), %s2
; CHECK-NEXT:    lea %s2, 166
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(38), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(38), %s2
; CHECK-NEXT:    lea %s2, 167
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(39), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(39), %s2
; CHECK-NEXT:    lea %s2, 168
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(40), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(40), %s2
; CHECK-NEXT:    lea %s2, 169
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(41), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(41), %s2
; CHECK-NEXT:    lea %s2, 170
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(42), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(42), %s2
; CHECK-NEXT:    lea %s2, 171
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(43), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(43), %s2
; CHECK-NEXT:    lea %s2, 172
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(44), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(44), %s2
; CHECK-NEXT:    lea %s2, 173
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(45), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(45), %s2
; CHECK-NEXT:    lea %s2, 174
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(46), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(46), %s2
; CHECK-NEXT:    lea %s2, 175
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(47), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(47), %s2
; CHECK-NEXT:    lea %s2, 176
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(48), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(48), %s2
; CHECK-NEXT:    lea %s2, 177
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(49), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(49), %s2
; CHECK-NEXT:    lea %s2, 178
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(50), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(50), %s2
; CHECK-NEXT:    lea %s2, 179
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(51), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(51), %s2
; CHECK-NEXT:    lea %s2, 180
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(52), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(52), %s2
; CHECK-NEXT:    lea %s2, 181
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(53), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(53), %s2
; CHECK-NEXT:    lea %s2, 182
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(54), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(54), %s2
; CHECK-NEXT:    lea %s2, 183
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(55), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(55), %s2
; CHECK-NEXT:    lea %s2, 184
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(56), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(56), %s2
; CHECK-NEXT:    lea %s2, 185
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(57), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(57), %s2
; CHECK-NEXT:    lea %s2, 186
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(58), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(58), %s2
; CHECK-NEXT:    lea %s2, 187
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(59), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(59), %s2
; CHECK-NEXT:    lea %s2, 188
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(60), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(60), %s2
; CHECK-NEXT:    lea %s2, 189
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(61), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(61), %s2
; CHECK-NEXT:    lea %s2, 190
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(62), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(62), %s2
; CHECK-NEXT:    lea %s2, 191
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(63), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(63), %s2
; CHECK-NEXT:    lea %s2, 192
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(64), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(64), %s2
; CHECK-NEXT:    lea %s2, 193
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(65), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(65), %s2
; CHECK-NEXT:    lea %s2, 194
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(66), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(66), %s2
; CHECK-NEXT:    lea %s2, 195
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(67), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(67), %s2
; CHECK-NEXT:    lea %s2, 196
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(68), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(68), %s2
; CHECK-NEXT:    lea %s2, 197
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(69), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(69), %s2
; CHECK-NEXT:    lea %s2, 198
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(70), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(70), %s2
; CHECK-NEXT:    lea %s2, 199
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(71), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(71), %s2
; CHECK-NEXT:    lea %s2, 200
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(72), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(72), %s2
; CHECK-NEXT:    lea %s2, 201
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(73), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(73), %s2
; CHECK-NEXT:    lea %s2, 202
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(74), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(74), %s2
; CHECK-NEXT:    lea %s2, 203
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(75), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(75), %s2
; CHECK-NEXT:    lea %s2, 204
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(76), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(76), %s2
; CHECK-NEXT:    lea %s2, 205
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(77), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(77), %s2
; CHECK-NEXT:    lea %s2, 206
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(78), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(78), %s2
; CHECK-NEXT:    lea %s2, 207
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(79), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(79), %s2
; CHECK-NEXT:    lea %s2, 208
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(80), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(80), %s2
; CHECK-NEXT:    lea %s2, 209
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(81), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(81), %s2
; CHECK-NEXT:    lea %s2, 210
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(82), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(82), %s2
; CHECK-NEXT:    lea %s2, 211
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(83), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(83), %s2
; CHECK-NEXT:    lea %s2, 212
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(84), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(84), %s2
; CHECK-NEXT:    lea %s2, 213
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(85), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(85), %s2
; CHECK-NEXT:    lea %s2, 214
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(86), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(86), %s2
; CHECK-NEXT:    lea %s2, 215
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(87), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(87), %s2
; CHECK-NEXT:    lea %s2, 216
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(88), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(88), %s2
; CHECK-NEXT:    lea %s2, 217
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(89), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(89), %s2
; CHECK-NEXT:    lea %s2, 218
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(90), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(90), %s2
; CHECK-NEXT:    lea %s2, 219
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(91), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(91), %s2
; CHECK-NEXT:    lea %s2, 220
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(92), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(92), %s2
; CHECK-NEXT:    lea %s2, 221
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(93), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(93), %s2
; CHECK-NEXT:    lea %s2, 222
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(94), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(94), %s2
; CHECK-NEXT:    lea %s2, 223
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(95), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(95), %s2
; CHECK-NEXT:    lea %s2, 224
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(96), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(96), %s2
; CHECK-NEXT:    lea %s2, 225
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(97), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(97), %s2
; CHECK-NEXT:    lea %s2, 226
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(98), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(98), %s2
; CHECK-NEXT:    lea %s2, 227
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(99), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(99), %s2
; CHECK-NEXT:    lea %s2, 228
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(100), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(100), %s2
; CHECK-NEXT:    lea %s2, 229
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(101), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(101), %s2
; CHECK-NEXT:    lea %s2, 230
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(102), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(102), %s2
; CHECK-NEXT:    lea %s2, 231
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(103), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(103), %s2
; CHECK-NEXT:    lea %s2, 232
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(104), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(104), %s2
; CHECK-NEXT:    lea %s2, 233
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(105), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(105), %s2
; CHECK-NEXT:    lea %s2, 234
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(106), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(106), %s2
; CHECK-NEXT:    lea %s2, 235
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(107), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(107), %s2
; CHECK-NEXT:    lea %s2, 236
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(108), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(108), %s2
; CHECK-NEXT:    lea %s2, 237
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(109), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(109), %s2
; CHECK-NEXT:    lea %s2, 238
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(110), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(110), %s2
; CHECK-NEXT:    lea %s2, 239
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(111), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(111), %s2
; CHECK-NEXT:    lea %s2, 240
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(112), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(112), %s2
; CHECK-NEXT:    lea %s2, 241
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(113), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(113), %s2
; CHECK-NEXT:    lea %s2, 242
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(114), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(114), %s2
; CHECK-NEXT:    lea %s2, 243
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(115), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(115), %s2
; CHECK-NEXT:    lea %s2, 244
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(116), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(116), %s2
; CHECK-NEXT:    lea %s2, 245
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(117), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(117), %s2
; CHECK-NEXT:    lea %s2, 246
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(118), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(118), %s2
; CHECK-NEXT:    lea %s2, 247
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(119), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(119), %s2
; CHECK-NEXT:    lea %s2, 248
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(120), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(120), %s2
; CHECK-NEXT:    lea %s2, 249
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(121), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(121), %s2
; CHECK-NEXT:    lea %s2, 250
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(122), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(122), %s2
; CHECK-NEXT:    lea %s2, 251
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(123), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(123), %s2
; CHECK-NEXT:    lea %s2, 252
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(124), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(124), %s2
; CHECK-NEXT:    lea %s2, 253
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(125), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(125), %s2
; CHECK-NEXT:    lea %s2, 254
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(126), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(126), %s2
; CHECK-NEXT:    lea %s2, 255
; CHECK-NEXT:    lvs %s2, %v1(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(127), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(127), %s2
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v2, %v2, 0
; CHECK-NEXT:    vshf %v1, %v0, %v0, 0
; CHECK-NEXT:    vmuls.w.sx %v1, %v1, %v3
; CHECK-NEXT:    vmuls.w.sx %v0, %v0, %v2
; CHECK-NEXT:    vshf %v0, %v0, %v1, 13
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v1, (0)1, %v0
; CHECK-NEXT:    lvs %s2, %v1(65)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lvs %s4, %v1(64)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v2
; CHECK-NEXT:    lsv %v2(0), %s5
; CHECK-NEXT:    lsv %v2(0), %s4
; CHECK-NEXT:    lsv %v2(1), %s3
; CHECK-NEXT:    lsv %v2(1), %s2
; CHECK-NEXT:    lvs %s2, %v1(66)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(2), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(2), %s2
; CHECK-NEXT:    lvs %s2, %v1(67)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(3), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(3), %s2
; CHECK-NEXT:    lvs %s2, %v1(68)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(4), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(4), %s2
; CHECK-NEXT:    lvs %s2, %v1(69)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(5), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(5), %s2
; CHECK-NEXT:    lvs %s2, %v1(70)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(6), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(6), %s2
; CHECK-NEXT:    lvs %s2, %v1(71)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(7), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(7), %s2
; CHECK-NEXT:    lvs %s2, %v1(72)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(8), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(8), %s2
; CHECK-NEXT:    lvs %s2, %v1(73)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(9), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(9), %s2
; CHECK-NEXT:    lvs %s2, %v1(74)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(10), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(10), %s2
; CHECK-NEXT:    lvs %s2, %v1(75)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(11), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(11), %s2
; CHECK-NEXT:    lvs %s2, %v1(76)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(12), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(12), %s2
; CHECK-NEXT:    lvs %s2, %v1(77)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(13), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(13), %s2
; CHECK-NEXT:    lvs %s2, %v1(78)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(14), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(14), %s2
; CHECK-NEXT:    lvs %s2, %v1(79)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(15), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(15), %s2
; CHECK-NEXT:    lvs %s2, %v1(80)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(16), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(16), %s2
; CHECK-NEXT:    lvs %s2, %v1(81)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(17), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(17), %s2
; CHECK-NEXT:    lvs %s2, %v1(82)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(18), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(18), %s2
; CHECK-NEXT:    lvs %s2, %v1(83)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(19), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(19), %s2
; CHECK-NEXT:    lvs %s2, %v1(84)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(20), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(20), %s2
; CHECK-NEXT:    lvs %s2, %v1(85)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(21), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(21), %s2
; CHECK-NEXT:    lvs %s2, %v1(86)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(22), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(22), %s2
; CHECK-NEXT:    lvs %s2, %v1(87)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(23), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(23), %s2
; CHECK-NEXT:    lvs %s2, %v1(88)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(24), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(24), %s2
; CHECK-NEXT:    lvs %s2, %v1(89)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(25), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(25), %s2
; CHECK-NEXT:    lvs %s2, %v1(90)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(26), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(26), %s2
; CHECK-NEXT:    lvs %s2, %v1(91)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(27), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(27), %s2
; CHECK-NEXT:    lvs %s2, %v1(92)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(28), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(28), %s2
; CHECK-NEXT:    lvs %s2, %v1(93)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(29), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(29), %s2
; CHECK-NEXT:    lvs %s2, %v1(94)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(30), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(30), %s2
; CHECK-NEXT:    lvs %s2, %v1(95)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(31), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(31), %s2
; CHECK-NEXT:    lvs %s2, %v1(96)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(32), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(32), %s2
; CHECK-NEXT:    lvs %s2, %v1(97)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(33), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(33), %s2
; CHECK-NEXT:    lvs %s2, %v1(98)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(34), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(34), %s2
; CHECK-NEXT:    lvs %s2, %v1(99)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(35), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(35), %s2
; CHECK-NEXT:    lvs %s2, %v1(100)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(36), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(36), %s2
; CHECK-NEXT:    lvs %s2, %v1(101)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(37), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(37), %s2
; CHECK-NEXT:    lvs %s2, %v1(102)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(38), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(38), %s2
; CHECK-NEXT:    lvs %s2, %v1(103)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(39), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(39), %s2
; CHECK-NEXT:    lvs %s2, %v1(104)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(40), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(40), %s2
; CHECK-NEXT:    lvs %s2, %v1(105)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(41), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(41), %s2
; CHECK-NEXT:    lvs %s2, %v1(106)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(42), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(42), %s2
; CHECK-NEXT:    lvs %s2, %v1(107)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(43), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(43), %s2
; CHECK-NEXT:    lvs %s2, %v1(108)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(44), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(44), %s2
; CHECK-NEXT:    lvs %s2, %v1(109)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(45), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(45), %s2
; CHECK-NEXT:    lvs %s2, %v1(110)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(46), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(46), %s2
; CHECK-NEXT:    lvs %s2, %v1(111)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(47), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(47), %s2
; CHECK-NEXT:    lvs %s2, %v1(112)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(48), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(48), %s2
; CHECK-NEXT:    lvs %s2, %v1(113)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(49), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(49), %s2
; CHECK-NEXT:    lvs %s2, %v1(114)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(50), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(50), %s2
; CHECK-NEXT:    lvs %s2, %v1(115)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(51), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(51), %s2
; CHECK-NEXT:    lvs %s2, %v1(116)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(52), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(52), %s2
; CHECK-NEXT:    lvs %s2, %v1(117)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(53), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(53), %s2
; CHECK-NEXT:    lvs %s2, %v1(118)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(54), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(54), %s2
; CHECK-NEXT:    lvs %s2, %v1(119)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(55), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(55), %s2
; CHECK-NEXT:    lvs %s2, %v1(120)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(56), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(56), %s2
; CHECK-NEXT:    lvs %s2, %v1(121)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(57), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(57), %s2
; CHECK-NEXT:    lvs %s2, %v1(122)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(58), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(58), %s2
; CHECK-NEXT:    lvs %s2, %v1(123)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(59), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(59), %s2
; CHECK-NEXT:    lvs %s2, %v1(124)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(60), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(60), %s2
; CHECK-NEXT:    lvs %s2, %v1(125)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(61), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(61), %s2
; CHECK-NEXT:    lvs %s2, %v1(126)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(62), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(62), %s2
; CHECK-NEXT:    lvs %s2, %v1(127)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(63), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(63), %s2
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v2, %v2, 0
; CHECK-NEXT:    vshf %v1, %v0, %v0, 0
; CHECK-NEXT:    vmuls.w.sx %v1, %v1, %v3
; CHECK-NEXT:    vmuls.w.sx %v0, %v0, %v2
; CHECK-NEXT:    vshf %v0, %v0, %v1, 13
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v1, (0)1, %v0
; CHECK-NEXT:    lvs %s2, %v1(33)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lvs %s4, %v1(32)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v2
; CHECK-NEXT:    lsv %v2(0), %s5
; CHECK-NEXT:    lsv %v2(0), %s4
; CHECK-NEXT:    lsv %v2(1), %s3
; CHECK-NEXT:    lsv %v2(1), %s2
; CHECK-NEXT:    lvs %s2, %v1(34)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(2), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(2), %s2
; CHECK-NEXT:    lvs %s2, %v1(35)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(3), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(3), %s2
; CHECK-NEXT:    lvs %s2, %v1(36)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(4), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(4), %s2
; CHECK-NEXT:    lvs %s2, %v1(37)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(5), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(5), %s2
; CHECK-NEXT:    lvs %s2, %v1(38)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(6), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(6), %s2
; CHECK-NEXT:    lvs %s2, %v1(39)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(7), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(7), %s2
; CHECK-NEXT:    lvs %s2, %v1(40)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(8), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(8), %s2
; CHECK-NEXT:    lvs %s2, %v1(41)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(9), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(9), %s2
; CHECK-NEXT:    lvs %s2, %v1(42)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(10), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(10), %s2
; CHECK-NEXT:    lvs %s2, %v1(43)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(11), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(11), %s2
; CHECK-NEXT:    lvs %s2, %v1(44)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(12), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(12), %s2
; CHECK-NEXT:    lvs %s2, %v1(45)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(13), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(13), %s2
; CHECK-NEXT:    lvs %s2, %v1(46)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(14), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(14), %s2
; CHECK-NEXT:    lvs %s2, %v1(47)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(15), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(15), %s2
; CHECK-NEXT:    lvs %s2, %v1(48)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(16), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(16), %s2
; CHECK-NEXT:    lvs %s2, %v1(49)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(17), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(17), %s2
; CHECK-NEXT:    lvs %s2, %v1(50)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(18), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(18), %s2
; CHECK-NEXT:    lvs %s2, %v1(51)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(19), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(19), %s2
; CHECK-NEXT:    lvs %s2, %v1(52)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(20), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(20), %s2
; CHECK-NEXT:    lvs %s2, %v1(53)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(21), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(21), %s2
; CHECK-NEXT:    lvs %s2, %v1(54)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(22), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(22), %s2
; CHECK-NEXT:    lvs %s2, %v1(55)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(23), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(23), %s2
; CHECK-NEXT:    lvs %s2, %v1(56)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(24), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(24), %s2
; CHECK-NEXT:    lvs %s2, %v1(57)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(25), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(25), %s2
; CHECK-NEXT:    lvs %s2, %v1(58)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(26), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(26), %s2
; CHECK-NEXT:    lvs %s2, %v1(59)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(27), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(27), %s2
; CHECK-NEXT:    lvs %s2, %v1(60)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(28), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(28), %s2
; CHECK-NEXT:    lvs %s2, %v1(61)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(29), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(29), %s2
; CHECK-NEXT:    lvs %s2, %v1(62)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(30), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(30), %s2
; CHECK-NEXT:    lvs %s2, %v1(63)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(31), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(31), %s2
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v2, %v2, 0
; CHECK-NEXT:    vshf %v1, %v0, %v0, 0
; CHECK-NEXT:    vmuls.w.sx %v1, %v1, %v3
; CHECK-NEXT:    vmuls.w.sx %v0, %v0, %v2
; CHECK-NEXT:    vshf %v0, %v0, %v1, 13
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v1, (0)1, %v0
; CHECK-NEXT:    lvs %s2, %v1(17)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lvs %s4, %v1(16)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v2
; CHECK-NEXT:    lsv %v2(0), %s5
; CHECK-NEXT:    lsv %v2(0), %s4
; CHECK-NEXT:    lsv %v2(1), %s3
; CHECK-NEXT:    lsv %v2(1), %s2
; CHECK-NEXT:    lvs %s2, %v1(18)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(2), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(2), %s2
; CHECK-NEXT:    lvs %s2, %v1(19)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(3), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(3), %s2
; CHECK-NEXT:    lvs %s2, %v1(20)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(4), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(4), %s2
; CHECK-NEXT:    lvs %s2, %v1(21)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(5), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(5), %s2
; CHECK-NEXT:    lvs %s2, %v1(22)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(6), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(6), %s2
; CHECK-NEXT:    lvs %s2, %v1(23)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(7), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(7), %s2
; CHECK-NEXT:    lvs %s2, %v1(24)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(8), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(8), %s2
; CHECK-NEXT:    lvs %s2, %v1(25)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(9), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(9), %s2
; CHECK-NEXT:    lvs %s2, %v1(26)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(10), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(10), %s2
; CHECK-NEXT:    lvs %s2, %v1(27)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(11), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(11), %s2
; CHECK-NEXT:    lvs %s2, %v1(28)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(12), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(12), %s2
; CHECK-NEXT:    lvs %s2, %v1(29)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(13), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(13), %s2
; CHECK-NEXT:    lvs %s2, %v1(30)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(14), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(14), %s2
; CHECK-NEXT:    lvs %s2, %v1(31)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(15), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(15), %s2
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v2, %v2, 0
; CHECK-NEXT:    vshf %v1, %v0, %v0, 0
; CHECK-NEXT:    vmuls.w.sx %v1, %v1, %v3
; CHECK-NEXT:    vmuls.w.sx %v0, %v0, %v2
; CHECK-NEXT:    vshf %v0, %v0, %v1, 13
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v1, (0)1, %v0
; CHECK-NEXT:    lvs %s2, %v1(9)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lvs %s4, %v1(8)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v2
; CHECK-NEXT:    lsv %v2(0), %s5
; CHECK-NEXT:    lsv %v2(0), %s4
; CHECK-NEXT:    lsv %v2(1), %s3
; CHECK-NEXT:    lsv %v2(1), %s2
; CHECK-NEXT:    lvs %s2, %v1(10)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(2), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(2), %s2
; CHECK-NEXT:    lvs %s2, %v1(11)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(3), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(3), %s2
; CHECK-NEXT:    lvs %s2, %v1(12)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(4), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(4), %s2
; CHECK-NEXT:    lvs %s2, %v1(13)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(5), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(5), %s2
; CHECK-NEXT:    lvs %s2, %v1(14)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(6), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(6), %s2
; CHECK-NEXT:    lvs %s2, %v1(15)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(7), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(7), %s2
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v2, %v2, 0
; CHECK-NEXT:    vshf %v1, %v0, %v0, 0
; CHECK-NEXT:    vmuls.w.sx %v1, %v1, %v3
; CHECK-NEXT:    vmuls.w.sx %v0, %v0, %v2
; CHECK-NEXT:    vshf %v0, %v0, %v1, 13
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v1, (0)1, %v0
; CHECK-NEXT:    lvs %s2, %v1(5)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lvs %s4, %v1(4)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v2
; CHECK-NEXT:    lsv %v2(0), %s5
; CHECK-NEXT:    lsv %v2(0), %s4
; CHECK-NEXT:    lsv %v2(1), %s3
; CHECK-NEXT:    lsv %v2(1), %s2
; CHECK-NEXT:    lvs %s2, %v1(6)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(2), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(2), %s2
; CHECK-NEXT:    lvs %s2, %v1(7)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v2(3), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v2(3), %s2
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v2, %v2, 0
; CHECK-NEXT:    vshf %v1, %v0, %v0, 0
; CHECK-NEXT:    vmuls.w.sx %v1, %v1, %v3
; CHECK-NEXT:    vmuls.w.sx %v0, %v0, %v2
; CHECK-NEXT:    vshf %v0, %v0, %v1, 13
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v1, (0)1, %v0
; CHECK-NEXT:    lvs %s2, %v1(3)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lvs %s4, %v1(2)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v2
; CHECK-NEXT:    lsv %v2(0), %s5
; CHECK-NEXT:    lsv %v2(0), %s4
; CHECK-NEXT:    lsv %v2(1), %s3
; CHECK-NEXT:    lsv %v2(1), %s2
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v2, %v2, 0
; CHECK-NEXT:    vshf %v1, %v0, %v0, 0
; CHECK-NEXT:    vmuls.w.sx %v1, %v1, %v3
; CHECK-NEXT:    vmuls.w.sx %v0, %v0, %v2
; CHECK-NEXT:    vshf %v0, %v0, %v1, 13
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v1, (0)1, %v0
; CHECK-NEXT:    lvs %s2, %v1(1)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    # implicit-def: $v2
; CHECK-NEXT:    lsv %v2(0), %s3
; CHECK-NEXT:    lsv %v2(0), %s2
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v2, %v2, 0
; CHECK-NEXT:    vshf %v1, %v0, %v0, 0
; CHECK-NEXT:    vmuls.w.sx %v1, %v1, %v3
; CHECK-NEXT:    vmuls.w.sx %v0, %v0, %v2
; CHECK-NEXT:    vshf %v0, %v0, %v1, 13
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v1, (0)1, %v0
; CHECK-NEXT:    lvs %s2, %v1(0)
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s3, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx3
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s3
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    # implicit-def: $v2
; CHECK-NEXT:    lsv %v2(0), %s2
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v1, %v0, %v0, 0
; CHECK-NEXT:    vshf %v3, %v2, %v2, 0
; CHECK-NEXT:    vmuls.w.sx %v1, %v1, %v3
; CHECK-NEXT:    vmuls.w.sx %v0, %v0, %v2
; CHECK-NEXT:    vshf %v0, %v0, %v1, 13
; CHECK-NEXT:    lvs %s0, %v0(0)
; CHECK-NEXT:    srl %s0, %s0, 32
; CHECK-NEXT:    # kill: def $sw0 killed $sw0 killed $sx0
; CHECK-NEXT:    muls.w.sx %s1, %s0, %s1
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    b.l.t (, %s10)
  %r = call i32 @llvm.vp.reduce.mul.v512i32(i32 %s, <512 x i32> %v, <512 x i1> %m, i32 %n)
  ret i32 %r
}

define fastcc i32 @test_reduce_and(i32 %s, <512 x i32> %v, <512 x i1> %m, i32 %n) {
; CHECK-LABEL: test_reduce_and:
; CHECK:       # %bb.0:
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.sx %s2, 1, %s1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s2
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    srl %s1, %s1, 1
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vshf %v1, %v0, %v0, 0
; CHECK-NEXT:    vrand %v1, %v1, %vm2
; CHECK-NEXT:    lvs %s2, %v1(0)
; CHECK-NEXT:    or %s3, 0, %s2
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s3
; CHECK-NEXT:    vrand %v0, %v0, %vm3
; CHECK-NEXT:    lvs %s1, %v0(0)
; CHECK-NEXT:    or %s3, 0, %s1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s3
; CHECK-NEXT:    and %s1, %s1, %s2
; CHECK-NEXT:    and %s0, %s0, %s1
; CHECK-NEXT:    b.l.t (, %s10)
  %r = call i32 @llvm.vp.reduce.and.v512i32(i32 %s, <512 x i32> %v, <512 x i1> %m, i32 %n)
  ret i32 %r
}

define fastcc i32 @test_reduce_or(i32 %s, <512 x i32> %v, <512 x i1> %m, i32 %n) {
; CHECK-LABEL: test_reduce_or:
; CHECK:       # %bb.0:
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.sx %s2, 1, %s1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s2
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    srl %s1, %s1, 1
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vshf %v1, %v0, %v0, 0
; CHECK-NEXT:    vror %v1, %v1, %vm2
; CHECK-NEXT:    lvs %s2, %v1(0)
; CHECK-NEXT:    or %s3, 0, %s2
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s3
; CHECK-NEXT:    vror %v0, %v0, %vm3
; CHECK-NEXT:    lvs %s1, %v0(0)
; CHECK-NEXT:    or %s3, 0, %s1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s3
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    or %s0, %s0, %s1
; CHECK-NEXT:    b.l.t (, %s10)
  %r = call i32 @llvm.vp.reduce.or.v512i32(i32 %s, <512 x i32> %v, <512 x i1> %m, i32 %n)
  ret i32 %r
}

define fastcc i32 @test_reduce_xor(i32 %s, <512 x i32> %v, <512 x i1> %m, i32 %n) {
; CHECK-LABEL: test_reduce_xor:
; CHECK:       # %bb.0:
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.sx %s2, 1, %s1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s2
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    srl %s1, %s1, 1
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vshf %v1, %v0, %v0, 0
; CHECK-NEXT:    vrxor %v1, %v1, %vm2
; CHECK-NEXT:    lvs %s2, %v1(0)
; CHECK-NEXT:    or %s3, 0, %s2
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s3
; CHECK-NEXT:    vrxor %v0, %v0, %vm3
; CHECK-NEXT:    lvs %s1, %v0(0)
; CHECK-NEXT:    or %s3, 0, %s1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s3
; CHECK-NEXT:    xor %s1, %s1, %s2
; CHECK-NEXT:    xor %s0, %s0, %s1
; CHECK-NEXT:    b.l.t (, %s10)
  %r = call i32 @llvm.vp.reduce.xor.v512i32(i32 %s, <512 x i32> %v, <512 x i1> %m, i32 %n)
  ret i32 %r
}

define fastcc i32 @test_reduce_smin(i32 %s, <512 x i32> %v, <512 x i1> %m, i32 %n) {
; TODO: map to smax
; CHECK-LABEL: test_reduce_smin:
; CHECK:       # %bb.0:
; CHECK-NEXT:    andm %vm1, %vm0, %vm2
; CHECK-NEXT:    andm %vm4, %vm0, %vm3
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    lea %s0, 2147483647
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s2
; CHECK-NEXT:    sll %s2, %s0, 32
; CHECK-NEXT:    and %s0, %s0, (32)0
; CHECK-NEXT:    or %s2, %s0, %s2
; CHECK-NEXT:    lea %s0, 256
; CHECK-NEXT:    # kill: def $sw0 killed $sw0 killed $sx0
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    pvbrd %v1, %s2
; CHECK-NEXT:    vmrg.w %v1, %v1, %v0, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v1
; CHECK-NEXT:    lea %s2, 129
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lea %s4, 128
; CHECK-NEXT:    lvs %s4, %v2(%s4)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v0
; CHECK-NEXT:    lsv %v0(0), %s5
; CHECK-NEXT:    lsv %v0(0), %s4
; CHECK-NEXT:    lsv %v0(1), %s3
; CHECK-NEXT:    lsv %v0(1), %s2
; CHECK-NEXT:    lea %s2, 130
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(2), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(2), %s2
; CHECK-NEXT:    lea %s2, 131
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(3), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(3), %s2
; CHECK-NEXT:    lea %s2, 132
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(4), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(4), %s2
; CHECK-NEXT:    lea %s2, 133
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(5), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(5), %s2
; CHECK-NEXT:    lea %s2, 134
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(6), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(6), %s2
; CHECK-NEXT:    lea %s2, 135
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(7), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(7), %s2
; CHECK-NEXT:    lea %s2, 136
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(8), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(8), %s2
; CHECK-NEXT:    lea %s2, 137
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(9), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(9), %s2
; CHECK-NEXT:    lea %s2, 138
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(10), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(10), %s2
; CHECK-NEXT:    lea %s2, 139
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(11), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(11), %s2
; CHECK-NEXT:    lea %s2, 140
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(12), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(12), %s2
; CHECK-NEXT:    lea %s2, 141
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(13), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(13), %s2
; CHECK-NEXT:    lea %s2, 142
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(14), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(14), %s2
; CHECK-NEXT:    lea %s2, 143
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(15), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(15), %s2
; CHECK-NEXT:    lea %s2, 144
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(16), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(16), %s2
; CHECK-NEXT:    lea %s2, 145
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(17), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(17), %s2
; CHECK-NEXT:    lea %s2, 146
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(18), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(18), %s2
; CHECK-NEXT:    lea %s2, 147
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(19), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(19), %s2
; CHECK-NEXT:    lea %s2, 148
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(20), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(20), %s2
; CHECK-NEXT:    lea %s2, 149
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(21), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(21), %s2
; CHECK-NEXT:    lea %s2, 150
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(22), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(22), %s2
; CHECK-NEXT:    lea %s2, 151
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(23), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(23), %s2
; CHECK-NEXT:    lea %s2, 152
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(24), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(24), %s2
; CHECK-NEXT:    lea %s2, 153
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(25), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(25), %s2
; CHECK-NEXT:    lea %s2, 154
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(26), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(26), %s2
; CHECK-NEXT:    lea %s2, 155
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(27), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(27), %s2
; CHECK-NEXT:    lea %s2, 156
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(28), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(28), %s2
; CHECK-NEXT:    lea %s2, 157
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(29), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(29), %s2
; CHECK-NEXT:    lea %s2, 158
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(30), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(30), %s2
; CHECK-NEXT:    lea %s2, 159
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(31), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(31), %s2
; CHECK-NEXT:    lea %s2, 160
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(32), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(32), %s2
; CHECK-NEXT:    lea %s2, 161
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(33), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(33), %s2
; CHECK-NEXT:    lea %s2, 162
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(34), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(34), %s2
; CHECK-NEXT:    lea %s2, 163
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(35), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(35), %s2
; CHECK-NEXT:    lea %s2, 164
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(36), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(36), %s2
; CHECK-NEXT:    lea %s2, 165
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(37), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(37), %s2
; CHECK-NEXT:    lea %s2, 166
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(38), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(38), %s2
; CHECK-NEXT:    lea %s2, 167
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(39), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(39), %s2
; CHECK-NEXT:    lea %s2, 168
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(40), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(40), %s2
; CHECK-NEXT:    lea %s2, 169
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(41), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(41), %s2
; CHECK-NEXT:    lea %s2, 170
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(42), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(42), %s2
; CHECK-NEXT:    lea %s2, 171
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(43), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(43), %s2
; CHECK-NEXT:    lea %s2, 172
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(44), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(44), %s2
; CHECK-NEXT:    lea %s2, 173
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(45), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(45), %s2
; CHECK-NEXT:    lea %s2, 174
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(46), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(46), %s2
; CHECK-NEXT:    lea %s2, 175
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(47), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(47), %s2
; CHECK-NEXT:    lea %s2, 176
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(48), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(48), %s2
; CHECK-NEXT:    lea %s2, 177
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(49), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(49), %s2
; CHECK-NEXT:    lea %s2, 178
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(50), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(50), %s2
; CHECK-NEXT:    lea %s2, 179
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(51), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(51), %s2
; CHECK-NEXT:    lea %s2, 180
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(52), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(52), %s2
; CHECK-NEXT:    lea %s2, 181
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(53), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(53), %s2
; CHECK-NEXT:    lea %s2, 182
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(54), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(54), %s2
; CHECK-NEXT:    lea %s2, 183
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(55), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(55), %s2
; CHECK-NEXT:    lea %s2, 184
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(56), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(56), %s2
; CHECK-NEXT:    lea %s2, 185
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(57), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(57), %s2
; CHECK-NEXT:    lea %s2, 186
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(58), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(58), %s2
; CHECK-NEXT:    lea %s2, 187
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(59), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(59), %s2
; CHECK-NEXT:    lea %s2, 188
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(60), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(60), %s2
; CHECK-NEXT:    lea %s2, 189
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(61), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(61), %s2
; CHECK-NEXT:    lea %s2, 190
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(62), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(62), %s2
; CHECK-NEXT:    lea %s2, 191
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(63), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(63), %s2
; CHECK-NEXT:    lea %s2, 192
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(64), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(64), %s2
; CHECK-NEXT:    lea %s2, 193
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(65), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(65), %s2
; CHECK-NEXT:    lea %s2, 194
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(66), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(66), %s2
; CHECK-NEXT:    lea %s2, 195
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(67), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(67), %s2
; CHECK-NEXT:    lea %s2, 196
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(68), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(68), %s2
; CHECK-NEXT:    lea %s2, 197
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(69), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(69), %s2
; CHECK-NEXT:    lea %s2, 198
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(70), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(70), %s2
; CHECK-NEXT:    lea %s2, 199
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(71), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(71), %s2
; CHECK-NEXT:    lea %s2, 200
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(72), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(72), %s2
; CHECK-NEXT:    lea %s2, 201
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(73), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(73), %s2
; CHECK-NEXT:    lea %s2, 202
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(74), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(74), %s2
; CHECK-NEXT:    lea %s2, 203
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(75), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(75), %s2
; CHECK-NEXT:    lea %s2, 204
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(76), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(76), %s2
; CHECK-NEXT:    lea %s2, 205
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(77), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(77), %s2
; CHECK-NEXT:    lea %s2, 206
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(78), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(78), %s2
; CHECK-NEXT:    lea %s2, 207
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(79), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(79), %s2
; CHECK-NEXT:    lea %s2, 208
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(80), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(80), %s2
; CHECK-NEXT:    lea %s2, 209
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(81), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(81), %s2
; CHECK-NEXT:    lea %s2, 210
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(82), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(82), %s2
; CHECK-NEXT:    lea %s2, 211
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(83), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(83), %s2
; CHECK-NEXT:    lea %s2, 212
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(84), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(84), %s2
; CHECK-NEXT:    lea %s2, 213
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(85), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(85), %s2
; CHECK-NEXT:    lea %s2, 214
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(86), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(86), %s2
; CHECK-NEXT:    lea %s2, 215
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(87), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(87), %s2
; CHECK-NEXT:    lea %s2, 216
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(88), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(88), %s2
; CHECK-NEXT:    lea %s2, 217
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(89), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(89), %s2
; CHECK-NEXT:    lea %s2, 218
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(90), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(90), %s2
; CHECK-NEXT:    lea %s2, 219
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(91), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(91), %s2
; CHECK-NEXT:    lea %s2, 220
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(92), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(92), %s2
; CHECK-NEXT:    lea %s2, 221
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(93), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(93), %s2
; CHECK-NEXT:    lea %s2, 222
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(94), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(94), %s2
; CHECK-NEXT:    lea %s2, 223
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(95), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(95), %s2
; CHECK-NEXT:    lea %s2, 224
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(96), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(96), %s2
; CHECK-NEXT:    lea %s2, 225
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(97), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(97), %s2
; CHECK-NEXT:    lea %s2, 226
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(98), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(98), %s2
; CHECK-NEXT:    lea %s2, 227
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(99), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(99), %s2
; CHECK-NEXT:    lea %s2, 228
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(100), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(100), %s2
; CHECK-NEXT:    lea %s2, 229
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(101), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(101), %s2
; CHECK-NEXT:    lea %s2, 230
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(102), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(102), %s2
; CHECK-NEXT:    lea %s2, 231
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(103), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(103), %s2
; CHECK-NEXT:    lea %s2, 232
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(104), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(104), %s2
; CHECK-NEXT:    lea %s2, 233
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(105), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(105), %s2
; CHECK-NEXT:    lea %s2, 234
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(106), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(106), %s2
; CHECK-NEXT:    lea %s2, 235
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(107), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(107), %s2
; CHECK-NEXT:    lea %s2, 236
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(108), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(108), %s2
; CHECK-NEXT:    lea %s2, 237
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(109), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(109), %s2
; CHECK-NEXT:    lea %s2, 238
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(110), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(110), %s2
; CHECK-NEXT:    lea %s2, 239
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(111), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(111), %s2
; CHECK-NEXT:    lea %s2, 240
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(112), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(112), %s2
; CHECK-NEXT:    lea %s2, 241
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(113), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(113), %s2
; CHECK-NEXT:    lea %s2, 242
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(114), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(114), %s2
; CHECK-NEXT:    lea %s2, 243
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(115), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(115), %s2
; CHECK-NEXT:    lea %s2, 244
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(116), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(116), %s2
; CHECK-NEXT:    lea %s2, 245
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(117), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(117), %s2
; CHECK-NEXT:    lea %s2, 246
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(118), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(118), %s2
; CHECK-NEXT:    lea %s2, 247
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(119), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(119), %s2
; CHECK-NEXT:    lea %s2, 248
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(120), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(120), %s2
; CHECK-NEXT:    lea %s2, 249
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(121), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(121), %s2
; CHECK-NEXT:    lea %s2, 250
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(122), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(122), %s2
; CHECK-NEXT:    lea %s2, 251
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(123), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(123), %s2
; CHECK-NEXT:    lea %s2, 252
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(124), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(124), %s2
; CHECK-NEXT:    lea %s2, 253
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(125), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(125), %s2
; CHECK-NEXT:    lea %s2, 254
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(126), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(126), %s2
; CHECK-NEXT:    lea %s2, 255
; CHECK-NEXT:    lvs %s2, %v2(%s2)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(127), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(127), %s2
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v0, %v0, 0
; CHECK-NEXT:    vshf %v2, %v1, %v1, 0
; CHECK-NEXT:    vcmps.w.zx %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v0
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmps.w.zx %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v0, %v0, %v1, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v0
; CHECK-NEXT:    lvs %s2, %v2(65)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lvs %s4, %v2(64)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v1
; CHECK-NEXT:    lsv %v1(0), %s5
; CHECK-NEXT:    lsv %v1(0), %s4
; CHECK-NEXT:    lsv %v1(1), %s3
; CHECK-NEXT:    lsv %v1(1), %s2
; CHECK-NEXT:    lvs %s2, %v2(66)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(2), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(2), %s2
; CHECK-NEXT:    lvs %s2, %v2(67)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(3), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(3), %s2
; CHECK-NEXT:    lvs %s2, %v2(68)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(4), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(4), %s2
; CHECK-NEXT:    lvs %s2, %v2(69)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(5), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(5), %s2
; CHECK-NEXT:    lvs %s2, %v2(70)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(6), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(6), %s2
; CHECK-NEXT:    lvs %s2, %v2(71)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(7), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(7), %s2
; CHECK-NEXT:    lvs %s2, %v2(72)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(8), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(8), %s2
; CHECK-NEXT:    lvs %s2, %v2(73)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(9), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(9), %s2
; CHECK-NEXT:    lvs %s2, %v2(74)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(10), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(10), %s2
; CHECK-NEXT:    lvs %s2, %v2(75)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(11), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(11), %s2
; CHECK-NEXT:    lvs %s2, %v2(76)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(12), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(12), %s2
; CHECK-NEXT:    lvs %s2, %v2(77)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(13), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(13), %s2
; CHECK-NEXT:    lvs %s2, %v2(78)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(14), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(14), %s2
; CHECK-NEXT:    lvs %s2, %v2(79)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(15), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(15), %s2
; CHECK-NEXT:    lvs %s2, %v2(80)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(16), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(16), %s2
; CHECK-NEXT:    lvs %s2, %v2(81)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(17), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(17), %s2
; CHECK-NEXT:    lvs %s2, %v2(82)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(18), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(18), %s2
; CHECK-NEXT:    lvs %s2, %v2(83)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(19), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(19), %s2
; CHECK-NEXT:    lvs %s2, %v2(84)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(20), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(20), %s2
; CHECK-NEXT:    lvs %s2, %v2(85)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(21), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(21), %s2
; CHECK-NEXT:    lvs %s2, %v2(86)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(22), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(22), %s2
; CHECK-NEXT:    lvs %s2, %v2(87)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(23), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(23), %s2
; CHECK-NEXT:    lvs %s2, %v2(88)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(24), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(24), %s2
; CHECK-NEXT:    lvs %s2, %v2(89)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(25), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(25), %s2
; CHECK-NEXT:    lvs %s2, %v2(90)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(26), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(26), %s2
; CHECK-NEXT:    lvs %s2, %v2(91)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(27), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(27), %s2
; CHECK-NEXT:    lvs %s2, %v2(92)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(28), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(28), %s2
; CHECK-NEXT:    lvs %s2, %v2(93)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(29), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(29), %s2
; CHECK-NEXT:    lvs %s2, %v2(94)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(30), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(30), %s2
; CHECK-NEXT:    lvs %s2, %v2(95)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(31), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(31), %s2
; CHECK-NEXT:    lvs %s2, %v2(96)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(32), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(32), %s2
; CHECK-NEXT:    lvs %s2, %v2(97)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(33), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(33), %s2
; CHECK-NEXT:    lvs %s2, %v2(98)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(34), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(34), %s2
; CHECK-NEXT:    lvs %s2, %v2(99)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(35), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(35), %s2
; CHECK-NEXT:    lvs %s2, %v2(100)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(36), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(36), %s2
; CHECK-NEXT:    lvs %s2, %v2(101)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(37), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(37), %s2
; CHECK-NEXT:    lvs %s2, %v2(102)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(38), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(38), %s2
; CHECK-NEXT:    lvs %s2, %v2(103)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(39), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(39), %s2
; CHECK-NEXT:    lvs %s2, %v2(104)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(40), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(40), %s2
; CHECK-NEXT:    lvs %s2, %v2(105)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(41), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(41), %s2
; CHECK-NEXT:    lvs %s2, %v2(106)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(42), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(42), %s2
; CHECK-NEXT:    lvs %s2, %v2(107)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(43), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(43), %s2
; CHECK-NEXT:    lvs %s2, %v2(108)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(44), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(44), %s2
; CHECK-NEXT:    lvs %s2, %v2(109)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(45), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(45), %s2
; CHECK-NEXT:    lvs %s2, %v2(110)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(46), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(46), %s2
; CHECK-NEXT:    lvs %s2, %v2(111)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(47), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(47), %s2
; CHECK-NEXT:    lvs %s2, %v2(112)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(48), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(48), %s2
; CHECK-NEXT:    lvs %s2, %v2(113)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(49), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(49), %s2
; CHECK-NEXT:    lvs %s2, %v2(114)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(50), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(50), %s2
; CHECK-NEXT:    lvs %s2, %v2(115)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(51), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(51), %s2
; CHECK-NEXT:    lvs %s2, %v2(116)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(52), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(52), %s2
; CHECK-NEXT:    lvs %s2, %v2(117)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(53), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(53), %s2
; CHECK-NEXT:    lvs %s2, %v2(118)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(54), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(54), %s2
; CHECK-NEXT:    lvs %s2, %v2(119)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(55), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(55), %s2
; CHECK-NEXT:    lvs %s2, %v2(120)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(56), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(56), %s2
; CHECK-NEXT:    lvs %s2, %v2(121)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(57), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(57), %s2
; CHECK-NEXT:    lvs %s2, %v2(122)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(58), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(58), %s2
; CHECK-NEXT:    lvs %s2, %v2(123)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(59), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(59), %s2
; CHECK-NEXT:    lvs %s2, %v2(124)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(60), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(60), %s2
; CHECK-NEXT:    lvs %s2, %v2(125)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(61), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(61), %s2
; CHECK-NEXT:    lvs %s2, %v2(126)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(62), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(62), %s2
; CHECK-NEXT:    lvs %s2, %v2(127)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(63), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(63), %s2
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v1, %v1, 0
; CHECK-NEXT:    vshf %v2, %v0, %v0, 0
; CHECK-NEXT:    vcmps.w.zx %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v1
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v0
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmps.w.zx %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v1, %v1, %v0, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v1
; CHECK-NEXT:    lvs %s2, %v2(33)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lvs %s4, %v2(32)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v0
; CHECK-NEXT:    lsv %v0(0), %s5
; CHECK-NEXT:    lsv %v0(0), %s4
; CHECK-NEXT:    lsv %v0(1), %s3
; CHECK-NEXT:    lsv %v0(1), %s2
; CHECK-NEXT:    lvs %s2, %v2(34)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(2), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(2), %s2
; CHECK-NEXT:    lvs %s2, %v2(35)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(3), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(3), %s2
; CHECK-NEXT:    lvs %s2, %v2(36)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(4), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(4), %s2
; CHECK-NEXT:    lvs %s2, %v2(37)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(5), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(5), %s2
; CHECK-NEXT:    lvs %s2, %v2(38)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(6), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(6), %s2
; CHECK-NEXT:    lvs %s2, %v2(39)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(7), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(7), %s2
; CHECK-NEXT:    lvs %s2, %v2(40)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(8), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(8), %s2
; CHECK-NEXT:    lvs %s2, %v2(41)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(9), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(9), %s2
; CHECK-NEXT:    lvs %s2, %v2(42)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(10), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(10), %s2
; CHECK-NEXT:    lvs %s2, %v2(43)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(11), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(11), %s2
; CHECK-NEXT:    lvs %s2, %v2(44)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(12), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(12), %s2
; CHECK-NEXT:    lvs %s2, %v2(45)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(13), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(13), %s2
; CHECK-NEXT:    lvs %s2, %v2(46)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(14), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(14), %s2
; CHECK-NEXT:    lvs %s2, %v2(47)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(15), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(15), %s2
; CHECK-NEXT:    lvs %s2, %v2(48)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(16), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(16), %s2
; CHECK-NEXT:    lvs %s2, %v2(49)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(17), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(17), %s2
; CHECK-NEXT:    lvs %s2, %v2(50)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(18), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(18), %s2
; CHECK-NEXT:    lvs %s2, %v2(51)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(19), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(19), %s2
; CHECK-NEXT:    lvs %s2, %v2(52)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(20), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(20), %s2
; CHECK-NEXT:    lvs %s2, %v2(53)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(21), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(21), %s2
; CHECK-NEXT:    lvs %s2, %v2(54)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(22), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(22), %s2
; CHECK-NEXT:    lvs %s2, %v2(55)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(23), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(23), %s2
; CHECK-NEXT:    lvs %s2, %v2(56)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(24), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(24), %s2
; CHECK-NEXT:    lvs %s2, %v2(57)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(25), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(25), %s2
; CHECK-NEXT:    lvs %s2, %v2(58)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(26), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(26), %s2
; CHECK-NEXT:    lvs %s2, %v2(59)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(27), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(27), %s2
; CHECK-NEXT:    lvs %s2, %v2(60)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(28), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(28), %s2
; CHECK-NEXT:    lvs %s2, %v2(61)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(29), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(29), %s2
; CHECK-NEXT:    lvs %s2, %v2(62)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(30), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(30), %s2
; CHECK-NEXT:    lvs %s2, %v2(63)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(31), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(31), %s2
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v0, %v0, 0
; CHECK-NEXT:    vshf %v2, %v1, %v1, 0
; CHECK-NEXT:    vcmps.w.zx %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v0
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmps.w.zx %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v0, %v0, %v1, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v0
; CHECK-NEXT:    lvs %s2, %v2(17)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lvs %s4, %v2(16)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v1
; CHECK-NEXT:    lsv %v1(0), %s5
; CHECK-NEXT:    lsv %v1(0), %s4
; CHECK-NEXT:    lsv %v1(1), %s3
; CHECK-NEXT:    lsv %v1(1), %s2
; CHECK-NEXT:    lvs %s2, %v2(18)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(2), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(2), %s2
; CHECK-NEXT:    lvs %s2, %v2(19)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(3), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(3), %s2
; CHECK-NEXT:    lvs %s2, %v2(20)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(4), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(4), %s2
; CHECK-NEXT:    lvs %s2, %v2(21)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(5), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(5), %s2
; CHECK-NEXT:    lvs %s2, %v2(22)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(6), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(6), %s2
; CHECK-NEXT:    lvs %s2, %v2(23)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(7), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(7), %s2
; CHECK-NEXT:    lvs %s2, %v2(24)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(8), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(8), %s2
; CHECK-NEXT:    lvs %s2, %v2(25)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(9), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(9), %s2
; CHECK-NEXT:    lvs %s2, %v2(26)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(10), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(10), %s2
; CHECK-NEXT:    lvs %s2, %v2(27)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(11), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(11), %s2
; CHECK-NEXT:    lvs %s2, %v2(28)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(12), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(12), %s2
; CHECK-NEXT:    lvs %s2, %v2(29)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(13), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(13), %s2
; CHECK-NEXT:    lvs %s2, %v2(30)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(14), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(14), %s2
; CHECK-NEXT:    lvs %s2, %v2(31)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(15), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(15), %s2
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v1, %v1, 0
; CHECK-NEXT:    vshf %v2, %v0, %v0, 0
; CHECK-NEXT:    vcmps.w.zx %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v1
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v0
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmps.w.zx %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v1, %v1, %v0, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v1
; CHECK-NEXT:    lvs %s2, %v2(9)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lvs %s4, %v2(8)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v0
; CHECK-NEXT:    lsv %v0(0), %s5
; CHECK-NEXT:    lsv %v0(0), %s4
; CHECK-NEXT:    lsv %v0(1), %s3
; CHECK-NEXT:    lsv %v0(1), %s2
; CHECK-NEXT:    lvs %s2, %v2(10)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(2), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(2), %s2
; CHECK-NEXT:    lvs %s2, %v2(11)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(3), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(3), %s2
; CHECK-NEXT:    lvs %s2, %v2(12)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(4), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(4), %s2
; CHECK-NEXT:    lvs %s2, %v2(13)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(5), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(5), %s2
; CHECK-NEXT:    lvs %s2, %v2(14)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(6), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(6), %s2
; CHECK-NEXT:    lvs %s2, %v2(15)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v0(7), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v0(7), %s2
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v0, %v0, 0
; CHECK-NEXT:    vshf %v2, %v1, %v1, 0
; CHECK-NEXT:    vcmps.w.zx %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v0
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmps.w.zx %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v0, %v0, %v1, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v0
; CHECK-NEXT:    lvs %s2, %v2(5)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lvs %s4, %v2(4)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v1
; CHECK-NEXT:    lsv %v1(0), %s5
; CHECK-NEXT:    lsv %v1(0), %s4
; CHECK-NEXT:    lsv %v1(1), %s3
; CHECK-NEXT:    lsv %v1(1), %s2
; CHECK-NEXT:    lvs %s2, %v2(6)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(2), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(2), %s2
; CHECK-NEXT:    lvs %s2, %v2(7)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    lsv %v1(3), %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lsv %v1(3), %s2
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v1, %v1, 0
; CHECK-NEXT:    vshf %v2, %v0, %v0, 0
; CHECK-NEXT:    vcmps.w.zx %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v1
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v0
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmps.w.zx %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v1, %v1, %v0, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v0, (0)1, %v1
; CHECK-NEXT:    lvs %s2, %v0(3)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    lvs %s4, %v0(2)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v0
; CHECK-NEXT:    lsv %v0(0), %s5
; CHECK-NEXT:    lsv %v0(0), %s4
; CHECK-NEXT:    lsv %v0(1), %s3
; CHECK-NEXT:    lsv %v0(1), %s2
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v0, %v0, 0
; CHECK-NEXT:    vshf %v2, %v1, %v1, 0
; CHECK-NEXT:    vcmps.w.zx %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v0
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmps.w.zx %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v0, %v0, %v1, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v1, (0)1, %v0
; CHECK-NEXT:    lvs %s2, %v1(1)
; CHECK-NEXT:    srl %s3, %s2, 32
; CHECK-NEXT:    # kill: def $sw3 killed $sw3 killed $sx3
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s3, 0, %s3
; CHECK-NEXT:    or %s3, 0, %s4
; CHECK-NEXT:    sll %s3, %s3, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s4, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    and %s2, %s2, (32)0
; CHECK-NEXT:    or %s2, %s2, %s3
; CHECK-NEXT:    # implicit-def: $v1
; CHECK-NEXT:    lsv %v1(0), %s3
; CHECK-NEXT:    lsv %v1(0), %s2
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v1, %v1, 0
; CHECK-NEXT:    vshf %v2, %v0, %v0, 0
; CHECK-NEXT:    vcmps.w.zx %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v1
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v0
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmps.w.zx %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v1, %v1, %v0, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v0, (0)1, %v1
; CHECK-NEXT:    lvs %s2, %v0(0)
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    adds.w.zx %s3, %s2, (0)1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s3
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx3
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s3
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    # implicit-def: $v0
; CHECK-NEXT:    lsv %v0(0), %s2
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v2, %v1, %v1, 0
; CHECK-NEXT:    vshf %v3, %v0, %v0, 0
; CHECK-NEXT:    vcmps.w.zx %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v1
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v0
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmps.w.zx %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v0, %v0, %v1, %vm2
; CHECK-NEXT:    lvs %s0, %v0(0)
; CHECK-NEXT:    srl %s0, %s0, 32
; CHECK-NEXT:    # kill: def $sw0 killed $sw0 killed $sx0
; CHECK-NEXT:    mins.w.sx %s1, %s0, %s1
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    b.l.t (, %s10)
  %r = call i32 @llvm.vp.reduce.smin.v512i32(i32 %s, <512 x i32> %v, <512 x i1> %m, i32 %n)
  ret i32 %r
}

define fastcc i32 @test_reduce_smax(i32 %s, <512 x i32> %v, <512 x i1> %m, i32 %n) {
; CHECK-LABEL: test_reduce_smax:
; CHECK:       # %bb.0:
; CHECK-NEXT:    # kill: def $sw0 killed $sw0 killed $sx0
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.sx %s2, 1, %s1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s2
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    srl %s1, %s1, 1
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vshf %v1, %v0, %v0, 0
; CHECK-NEXT:    vrmaxs.w.fst.sx %v1, %v1, %vm2
; CHECK-NEXT:    lvs %s2, %v1(0)
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    vrmaxs.w.fst.sx %v0, %v0, %vm3
; CHECK-NEXT:    lvs %s1, %v0(0)
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    maxs.w.sx %s1, %s1, %s2
; CHECK-NEXT:    maxs.w.sx %s1, %s0, %s1
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    b.l.t (, %s10)
  %r = call i32 @llvm.vp.reduce.smax.v512i32(i32 %s, <512 x i32> %v, <512 x i1> %m, i32 %n)
  ret i32 %r
}

define fastcc i32 @test_reduce_umin(i32 %s, <512 x i32> %v, <512 x i1> %m, i32 %n) {
; TODO: map to smax
; CHECK-LABEL: test_reduce_umin:
; CHECK:       # %bb.0:
; CHECK-NEXT:    andm %vm1, %vm0, %vm2
; CHECK-NEXT:    andm %vm4, %vm0, %vm3
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    or %s3, 0, %s0
; CHECK-NEXT:    or %s0, -1, (0)1
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    and %s0, %s0, (32)0
; CHECK-NEXT:    or %s1, %s0, %s1
; CHECK-NEXT:    lea %s0, 256
; CHECK-NEXT:    # kill: def $sw0 killed $sw0 killed $sx0
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    pvbrd %v1, %s1
; CHECK-NEXT:    vmrg.w %v1, %v1, %v0, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v1
; CHECK-NEXT:    lea %s1, 129
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lea %s4, 128
; CHECK-NEXT:    lvs %s4, %v2(%s4)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v0
; CHECK-NEXT:    lsv %v0(0), %s5
; CHECK-NEXT:    lsv %v0(0), %s4
; CHECK-NEXT:    lsv %v0(1), %s2
; CHECK-NEXT:    lsv %v0(1), %s1
; CHECK-NEXT:    lea %s1, 130
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(2), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(2), %s1
; CHECK-NEXT:    lea %s1, 131
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(3), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(3), %s1
; CHECK-NEXT:    lea %s1, 132
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(4), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(4), %s1
; CHECK-NEXT:    lea %s1, 133
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(5), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(5), %s1
; CHECK-NEXT:    lea %s1, 134
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(6), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(6), %s1
; CHECK-NEXT:    lea %s1, 135
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(7), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(7), %s1
; CHECK-NEXT:    lea %s1, 136
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(8), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(8), %s1
; CHECK-NEXT:    lea %s1, 137
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(9), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(9), %s1
; CHECK-NEXT:    lea %s1, 138
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(10), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(10), %s1
; CHECK-NEXT:    lea %s1, 139
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(11), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(11), %s1
; CHECK-NEXT:    lea %s1, 140
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(12), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(12), %s1
; CHECK-NEXT:    lea %s1, 141
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(13), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(13), %s1
; CHECK-NEXT:    lea %s1, 142
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(14), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(14), %s1
; CHECK-NEXT:    lea %s1, 143
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(15), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(15), %s1
; CHECK-NEXT:    lea %s1, 144
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(16), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(16), %s1
; CHECK-NEXT:    lea %s1, 145
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(17), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(17), %s1
; CHECK-NEXT:    lea %s1, 146
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(18), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(18), %s1
; CHECK-NEXT:    lea %s1, 147
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(19), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(19), %s1
; CHECK-NEXT:    lea %s1, 148
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(20), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(20), %s1
; CHECK-NEXT:    lea %s1, 149
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(21), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(21), %s1
; CHECK-NEXT:    lea %s1, 150
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(22), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(22), %s1
; CHECK-NEXT:    lea %s1, 151
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(23), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(23), %s1
; CHECK-NEXT:    lea %s1, 152
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(24), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(24), %s1
; CHECK-NEXT:    lea %s1, 153
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(25), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(25), %s1
; CHECK-NEXT:    lea %s1, 154
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(26), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(26), %s1
; CHECK-NEXT:    lea %s1, 155
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(27), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(27), %s1
; CHECK-NEXT:    lea %s1, 156
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(28), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(28), %s1
; CHECK-NEXT:    lea %s1, 157
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(29), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(29), %s1
; CHECK-NEXT:    lea %s1, 158
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(30), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(30), %s1
; CHECK-NEXT:    lea %s1, 159
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(31), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(31), %s1
; CHECK-NEXT:    lea %s1, 160
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(32), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(32), %s1
; CHECK-NEXT:    lea %s1, 161
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(33), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(33), %s1
; CHECK-NEXT:    lea %s1, 162
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(34), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(34), %s1
; CHECK-NEXT:    lea %s1, 163
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(35), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(35), %s1
; CHECK-NEXT:    lea %s1, 164
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(36), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(36), %s1
; CHECK-NEXT:    lea %s1, 165
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(37), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(37), %s1
; CHECK-NEXT:    lea %s1, 166
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(38), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(38), %s1
; CHECK-NEXT:    lea %s1, 167
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(39), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(39), %s1
; CHECK-NEXT:    lea %s1, 168
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(40), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(40), %s1
; CHECK-NEXT:    lea %s1, 169
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(41), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(41), %s1
; CHECK-NEXT:    lea %s1, 170
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(42), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(42), %s1
; CHECK-NEXT:    lea %s1, 171
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(43), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(43), %s1
; CHECK-NEXT:    lea %s1, 172
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(44), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(44), %s1
; CHECK-NEXT:    lea %s1, 173
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(45), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(45), %s1
; CHECK-NEXT:    lea %s1, 174
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(46), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(46), %s1
; CHECK-NEXT:    lea %s1, 175
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(47), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(47), %s1
; CHECK-NEXT:    lea %s1, 176
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(48), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(48), %s1
; CHECK-NEXT:    lea %s1, 177
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(49), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(49), %s1
; CHECK-NEXT:    lea %s1, 178
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(50), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(50), %s1
; CHECK-NEXT:    lea %s1, 179
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(51), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(51), %s1
; CHECK-NEXT:    lea %s1, 180
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(52), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(52), %s1
; CHECK-NEXT:    lea %s1, 181
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(53), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(53), %s1
; CHECK-NEXT:    lea %s1, 182
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(54), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(54), %s1
; CHECK-NEXT:    lea %s1, 183
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(55), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(55), %s1
; CHECK-NEXT:    lea %s1, 184
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(56), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(56), %s1
; CHECK-NEXT:    lea %s1, 185
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(57), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(57), %s1
; CHECK-NEXT:    lea %s1, 186
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(58), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(58), %s1
; CHECK-NEXT:    lea %s1, 187
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(59), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(59), %s1
; CHECK-NEXT:    lea %s1, 188
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(60), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(60), %s1
; CHECK-NEXT:    lea %s1, 189
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(61), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(61), %s1
; CHECK-NEXT:    lea %s1, 190
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(62), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(62), %s1
; CHECK-NEXT:    lea %s1, 191
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(63), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(63), %s1
; CHECK-NEXT:    lea %s1, 192
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(64), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(64), %s1
; CHECK-NEXT:    lea %s1, 193
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(65), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(65), %s1
; CHECK-NEXT:    lea %s1, 194
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(66), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(66), %s1
; CHECK-NEXT:    lea %s1, 195
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(67), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(67), %s1
; CHECK-NEXT:    lea %s1, 196
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(68), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(68), %s1
; CHECK-NEXT:    lea %s1, 197
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(69), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(69), %s1
; CHECK-NEXT:    lea %s1, 198
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(70), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(70), %s1
; CHECK-NEXT:    lea %s1, 199
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(71), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(71), %s1
; CHECK-NEXT:    lea %s1, 200
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(72), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(72), %s1
; CHECK-NEXT:    lea %s1, 201
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(73), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(73), %s1
; CHECK-NEXT:    lea %s1, 202
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(74), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(74), %s1
; CHECK-NEXT:    lea %s1, 203
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(75), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(75), %s1
; CHECK-NEXT:    lea %s1, 204
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(76), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(76), %s1
; CHECK-NEXT:    lea %s1, 205
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(77), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(77), %s1
; CHECK-NEXT:    lea %s1, 206
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(78), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(78), %s1
; CHECK-NEXT:    lea %s1, 207
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(79), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(79), %s1
; CHECK-NEXT:    lea %s1, 208
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(80), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(80), %s1
; CHECK-NEXT:    lea %s1, 209
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(81), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(81), %s1
; CHECK-NEXT:    lea %s1, 210
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(82), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(82), %s1
; CHECK-NEXT:    lea %s1, 211
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(83), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(83), %s1
; CHECK-NEXT:    lea %s1, 212
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(84), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(84), %s1
; CHECK-NEXT:    lea %s1, 213
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(85), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(85), %s1
; CHECK-NEXT:    lea %s1, 214
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(86), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(86), %s1
; CHECK-NEXT:    lea %s1, 215
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(87), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(87), %s1
; CHECK-NEXT:    lea %s1, 216
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(88), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(88), %s1
; CHECK-NEXT:    lea %s1, 217
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(89), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(89), %s1
; CHECK-NEXT:    lea %s1, 218
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(90), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(90), %s1
; CHECK-NEXT:    lea %s1, 219
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(91), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(91), %s1
; CHECK-NEXT:    lea %s1, 220
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(92), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(92), %s1
; CHECK-NEXT:    lea %s1, 221
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(93), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(93), %s1
; CHECK-NEXT:    lea %s1, 222
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(94), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(94), %s1
; CHECK-NEXT:    lea %s1, 223
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(95), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(95), %s1
; CHECK-NEXT:    lea %s1, 224
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(96), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(96), %s1
; CHECK-NEXT:    lea %s1, 225
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(97), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(97), %s1
; CHECK-NEXT:    lea %s1, 226
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(98), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(98), %s1
; CHECK-NEXT:    lea %s1, 227
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(99), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(99), %s1
; CHECK-NEXT:    lea %s1, 228
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(100), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(100), %s1
; CHECK-NEXT:    lea %s1, 229
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(101), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(101), %s1
; CHECK-NEXT:    lea %s1, 230
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(102), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(102), %s1
; CHECK-NEXT:    lea %s1, 231
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(103), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(103), %s1
; CHECK-NEXT:    lea %s1, 232
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(104), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(104), %s1
; CHECK-NEXT:    lea %s1, 233
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(105), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(105), %s1
; CHECK-NEXT:    lea %s1, 234
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(106), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(106), %s1
; CHECK-NEXT:    lea %s1, 235
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(107), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(107), %s1
; CHECK-NEXT:    lea %s1, 236
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(108), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(108), %s1
; CHECK-NEXT:    lea %s1, 237
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(109), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(109), %s1
; CHECK-NEXT:    lea %s1, 238
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(110), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(110), %s1
; CHECK-NEXT:    lea %s1, 239
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(111), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(111), %s1
; CHECK-NEXT:    lea %s1, 240
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(112), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(112), %s1
; CHECK-NEXT:    lea %s1, 241
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(113), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(113), %s1
; CHECK-NEXT:    lea %s1, 242
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(114), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(114), %s1
; CHECK-NEXT:    lea %s1, 243
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(115), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(115), %s1
; CHECK-NEXT:    lea %s1, 244
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(116), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(116), %s1
; CHECK-NEXT:    lea %s1, 245
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(117), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(117), %s1
; CHECK-NEXT:    lea %s1, 246
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(118), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(118), %s1
; CHECK-NEXT:    lea %s1, 247
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(119), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(119), %s1
; CHECK-NEXT:    lea %s1, 248
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(120), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(120), %s1
; CHECK-NEXT:    lea %s1, 249
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(121), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(121), %s1
; CHECK-NEXT:    lea %s1, 250
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(122), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(122), %s1
; CHECK-NEXT:    lea %s1, 251
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(123), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(123), %s1
; CHECK-NEXT:    lea %s1, 252
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(124), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(124), %s1
; CHECK-NEXT:    lea %s1, 253
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(125), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(125), %s1
; CHECK-NEXT:    lea %s1, 254
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(126), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(126), %s1
; CHECK-NEXT:    lea %s1, 255
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(127), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(127), %s1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v0, %v0, 0
; CHECK-NEXT:    vshf %v2, %v1, %v1, 0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v0
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v0, %v0, %v1, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v0
; CHECK-NEXT:    lvs %s1, %v2(65)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lvs %s4, %v2(64)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v1
; CHECK-NEXT:    lsv %v1(0), %s5
; CHECK-NEXT:    lsv %v1(0), %s4
; CHECK-NEXT:    lsv %v1(1), %s2
; CHECK-NEXT:    lsv %v1(1), %s1
; CHECK-NEXT:    lvs %s1, %v2(66)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(2), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(2), %s1
; CHECK-NEXT:    lvs %s1, %v2(67)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(3), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(3), %s1
; CHECK-NEXT:    lvs %s1, %v2(68)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(4), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(4), %s1
; CHECK-NEXT:    lvs %s1, %v2(69)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(5), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(5), %s1
; CHECK-NEXT:    lvs %s1, %v2(70)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(6), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(6), %s1
; CHECK-NEXT:    lvs %s1, %v2(71)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(7), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(7), %s1
; CHECK-NEXT:    lvs %s1, %v2(72)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(8), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(8), %s1
; CHECK-NEXT:    lvs %s1, %v2(73)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(9), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(9), %s1
; CHECK-NEXT:    lvs %s1, %v2(74)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(10), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(10), %s1
; CHECK-NEXT:    lvs %s1, %v2(75)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(11), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(11), %s1
; CHECK-NEXT:    lvs %s1, %v2(76)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(12), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(12), %s1
; CHECK-NEXT:    lvs %s1, %v2(77)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(13), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(13), %s1
; CHECK-NEXT:    lvs %s1, %v2(78)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(14), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(14), %s1
; CHECK-NEXT:    lvs %s1, %v2(79)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(15), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(15), %s1
; CHECK-NEXT:    lvs %s1, %v2(80)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(16), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(16), %s1
; CHECK-NEXT:    lvs %s1, %v2(81)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(17), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(17), %s1
; CHECK-NEXT:    lvs %s1, %v2(82)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(18), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(18), %s1
; CHECK-NEXT:    lvs %s1, %v2(83)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(19), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(19), %s1
; CHECK-NEXT:    lvs %s1, %v2(84)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(20), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(20), %s1
; CHECK-NEXT:    lvs %s1, %v2(85)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(21), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(21), %s1
; CHECK-NEXT:    lvs %s1, %v2(86)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(22), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(22), %s1
; CHECK-NEXT:    lvs %s1, %v2(87)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(23), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(23), %s1
; CHECK-NEXT:    lvs %s1, %v2(88)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(24), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(24), %s1
; CHECK-NEXT:    lvs %s1, %v2(89)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(25), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(25), %s1
; CHECK-NEXT:    lvs %s1, %v2(90)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(26), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(26), %s1
; CHECK-NEXT:    lvs %s1, %v2(91)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(27), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(27), %s1
; CHECK-NEXT:    lvs %s1, %v2(92)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(28), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(28), %s1
; CHECK-NEXT:    lvs %s1, %v2(93)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(29), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(29), %s1
; CHECK-NEXT:    lvs %s1, %v2(94)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(30), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(30), %s1
; CHECK-NEXT:    lvs %s1, %v2(95)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(31), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(31), %s1
; CHECK-NEXT:    lvs %s1, %v2(96)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(32), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(32), %s1
; CHECK-NEXT:    lvs %s1, %v2(97)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(33), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(33), %s1
; CHECK-NEXT:    lvs %s1, %v2(98)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(34), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(34), %s1
; CHECK-NEXT:    lvs %s1, %v2(99)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(35), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(35), %s1
; CHECK-NEXT:    lvs %s1, %v2(100)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(36), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(36), %s1
; CHECK-NEXT:    lvs %s1, %v2(101)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(37), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(37), %s1
; CHECK-NEXT:    lvs %s1, %v2(102)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(38), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(38), %s1
; CHECK-NEXT:    lvs %s1, %v2(103)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(39), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(39), %s1
; CHECK-NEXT:    lvs %s1, %v2(104)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(40), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(40), %s1
; CHECK-NEXT:    lvs %s1, %v2(105)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(41), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(41), %s1
; CHECK-NEXT:    lvs %s1, %v2(106)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(42), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(42), %s1
; CHECK-NEXT:    lvs %s1, %v2(107)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(43), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(43), %s1
; CHECK-NEXT:    lvs %s1, %v2(108)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(44), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(44), %s1
; CHECK-NEXT:    lvs %s1, %v2(109)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(45), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(45), %s1
; CHECK-NEXT:    lvs %s1, %v2(110)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(46), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(46), %s1
; CHECK-NEXT:    lvs %s1, %v2(111)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(47), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(47), %s1
; CHECK-NEXT:    lvs %s1, %v2(112)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(48), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(48), %s1
; CHECK-NEXT:    lvs %s1, %v2(113)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(49), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(49), %s1
; CHECK-NEXT:    lvs %s1, %v2(114)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(50), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(50), %s1
; CHECK-NEXT:    lvs %s1, %v2(115)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(51), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(51), %s1
; CHECK-NEXT:    lvs %s1, %v2(116)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(52), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(52), %s1
; CHECK-NEXT:    lvs %s1, %v2(117)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(53), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(53), %s1
; CHECK-NEXT:    lvs %s1, %v2(118)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(54), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(54), %s1
; CHECK-NEXT:    lvs %s1, %v2(119)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(55), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(55), %s1
; CHECK-NEXT:    lvs %s1, %v2(120)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(56), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(56), %s1
; CHECK-NEXT:    lvs %s1, %v2(121)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(57), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(57), %s1
; CHECK-NEXT:    lvs %s1, %v2(122)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(58), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(58), %s1
; CHECK-NEXT:    lvs %s1, %v2(123)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(59), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(59), %s1
; CHECK-NEXT:    lvs %s1, %v2(124)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(60), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(60), %s1
; CHECK-NEXT:    lvs %s1, %v2(125)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(61), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(61), %s1
; CHECK-NEXT:    lvs %s1, %v2(126)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(62), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(62), %s1
; CHECK-NEXT:    lvs %s1, %v2(127)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(63), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(63), %s1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v1, %v1, 0
; CHECK-NEXT:    vshf %v2, %v0, %v0, 0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v1
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v0
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v1, %v1, %v0, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v1
; CHECK-NEXT:    lvs %s1, %v2(33)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lvs %s4, %v2(32)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v0
; CHECK-NEXT:    lsv %v0(0), %s5
; CHECK-NEXT:    lsv %v0(0), %s4
; CHECK-NEXT:    lsv %v0(1), %s2
; CHECK-NEXT:    lsv %v0(1), %s1
; CHECK-NEXT:    lvs %s1, %v2(34)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(2), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(2), %s1
; CHECK-NEXT:    lvs %s1, %v2(35)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(3), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(3), %s1
; CHECK-NEXT:    lvs %s1, %v2(36)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(4), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(4), %s1
; CHECK-NEXT:    lvs %s1, %v2(37)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(5), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(5), %s1
; CHECK-NEXT:    lvs %s1, %v2(38)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(6), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(6), %s1
; CHECK-NEXT:    lvs %s1, %v2(39)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(7), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(7), %s1
; CHECK-NEXT:    lvs %s1, %v2(40)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(8), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(8), %s1
; CHECK-NEXT:    lvs %s1, %v2(41)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(9), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(9), %s1
; CHECK-NEXT:    lvs %s1, %v2(42)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(10), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(10), %s1
; CHECK-NEXT:    lvs %s1, %v2(43)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(11), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(11), %s1
; CHECK-NEXT:    lvs %s1, %v2(44)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(12), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(12), %s1
; CHECK-NEXT:    lvs %s1, %v2(45)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(13), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(13), %s1
; CHECK-NEXT:    lvs %s1, %v2(46)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(14), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(14), %s1
; CHECK-NEXT:    lvs %s1, %v2(47)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(15), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(15), %s1
; CHECK-NEXT:    lvs %s1, %v2(48)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(16), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(16), %s1
; CHECK-NEXT:    lvs %s1, %v2(49)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(17), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(17), %s1
; CHECK-NEXT:    lvs %s1, %v2(50)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(18), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(18), %s1
; CHECK-NEXT:    lvs %s1, %v2(51)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(19), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(19), %s1
; CHECK-NEXT:    lvs %s1, %v2(52)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(20), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(20), %s1
; CHECK-NEXT:    lvs %s1, %v2(53)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(21), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(21), %s1
; CHECK-NEXT:    lvs %s1, %v2(54)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(22), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(22), %s1
; CHECK-NEXT:    lvs %s1, %v2(55)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(23), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(23), %s1
; CHECK-NEXT:    lvs %s1, %v2(56)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(24), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(24), %s1
; CHECK-NEXT:    lvs %s1, %v2(57)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(25), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(25), %s1
; CHECK-NEXT:    lvs %s1, %v2(58)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(26), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(26), %s1
; CHECK-NEXT:    lvs %s1, %v2(59)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(27), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(27), %s1
; CHECK-NEXT:    lvs %s1, %v2(60)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(28), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(28), %s1
; CHECK-NEXT:    lvs %s1, %v2(61)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(29), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(29), %s1
; CHECK-NEXT:    lvs %s1, %v2(62)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(30), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(30), %s1
; CHECK-NEXT:    lvs %s1, %v2(63)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(31), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(31), %s1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v0, %v0, 0
; CHECK-NEXT:    vshf %v2, %v1, %v1, 0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v0
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v0, %v0, %v1, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v0
; CHECK-NEXT:    lvs %s1, %v2(17)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lvs %s4, %v2(16)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v1
; CHECK-NEXT:    lsv %v1(0), %s5
; CHECK-NEXT:    lsv %v1(0), %s4
; CHECK-NEXT:    lsv %v1(1), %s2
; CHECK-NEXT:    lsv %v1(1), %s1
; CHECK-NEXT:    lvs %s1, %v2(18)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(2), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(2), %s1
; CHECK-NEXT:    lvs %s1, %v2(19)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(3), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(3), %s1
; CHECK-NEXT:    lvs %s1, %v2(20)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(4), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(4), %s1
; CHECK-NEXT:    lvs %s1, %v2(21)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(5), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(5), %s1
; CHECK-NEXT:    lvs %s1, %v2(22)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(6), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(6), %s1
; CHECK-NEXT:    lvs %s1, %v2(23)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(7), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(7), %s1
; CHECK-NEXT:    lvs %s1, %v2(24)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(8), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(8), %s1
; CHECK-NEXT:    lvs %s1, %v2(25)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(9), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(9), %s1
; CHECK-NEXT:    lvs %s1, %v2(26)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(10), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(10), %s1
; CHECK-NEXT:    lvs %s1, %v2(27)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(11), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(11), %s1
; CHECK-NEXT:    lvs %s1, %v2(28)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(12), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(12), %s1
; CHECK-NEXT:    lvs %s1, %v2(29)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(13), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(13), %s1
; CHECK-NEXT:    lvs %s1, %v2(30)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(14), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(14), %s1
; CHECK-NEXT:    lvs %s1, %v2(31)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(15), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(15), %s1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v1, %v1, 0
; CHECK-NEXT:    vshf %v2, %v0, %v0, 0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v1
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v0
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v1, %v1, %v0, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v1
; CHECK-NEXT:    lvs %s1, %v2(9)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lvs %s4, %v2(8)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v0
; CHECK-NEXT:    lsv %v0(0), %s5
; CHECK-NEXT:    lsv %v0(0), %s4
; CHECK-NEXT:    lsv %v0(1), %s2
; CHECK-NEXT:    lsv %v0(1), %s1
; CHECK-NEXT:    lvs %s1, %v2(10)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(2), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(2), %s1
; CHECK-NEXT:    lvs %s1, %v2(11)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(3), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(3), %s1
; CHECK-NEXT:    lvs %s1, %v2(12)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(4), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(4), %s1
; CHECK-NEXT:    lvs %s1, %v2(13)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(5), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(5), %s1
; CHECK-NEXT:    lvs %s1, %v2(14)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(6), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(6), %s1
; CHECK-NEXT:    lvs %s1, %v2(15)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(7), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(7), %s1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v0, %v0, 0
; CHECK-NEXT:    vshf %v2, %v1, %v1, 0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v0
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v0, %v0, %v1, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v0
; CHECK-NEXT:    lvs %s1, %v2(5)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lvs %s4, %v2(4)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v1
; CHECK-NEXT:    lsv %v1(0), %s5
; CHECK-NEXT:    lsv %v1(0), %s4
; CHECK-NEXT:    lsv %v1(1), %s2
; CHECK-NEXT:    lsv %v1(1), %s1
; CHECK-NEXT:    lvs %s1, %v2(6)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(2), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(2), %s1
; CHECK-NEXT:    lvs %s1, %v2(7)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(3), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(3), %s1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v1, %v1, 0
; CHECK-NEXT:    vshf %v2, %v0, %v0, 0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v1
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v0
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v1, %v1, %v0, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v0, (0)1, %v1
; CHECK-NEXT:    lvs %s1, %v0(3)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lvs %s4, %v0(2)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v0
; CHECK-NEXT:    lsv %v0(0), %s5
; CHECK-NEXT:    lsv %v0(0), %s4
; CHECK-NEXT:    lsv %v0(1), %s2
; CHECK-NEXT:    lsv %v0(1), %s1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v0, %v0, 0
; CHECK-NEXT:    vshf %v2, %v1, %v1, 0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v0
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v0, %v0, %v1, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v1, (0)1, %v0
; CHECK-NEXT:    lvs %s1, %v1(1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    # implicit-def: $v1
; CHECK-NEXT:    lsv %v1(0), %s2
; CHECK-NEXT:    lsv %v1(0), %s1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v1, %v1, 0
; CHECK-NEXT:    vshf %v2, %v0, %v0, 0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v1
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v0
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v1, %v1, %v0, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v0, (0)1, %v1
; CHECK-NEXT:    lvs %s1, %v0(0)
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s2, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s2
; CHECK-NEXT:    sll %s1, %s1, 32
; CHECK-NEXT:    # implicit-def: $v0
; CHECK-NEXT:    lsv %v0(0), %s1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v2, %v1, %v1, 0
; CHECK-NEXT:    vshf %v3, %v0, %v0, 0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v1
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v0
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.lt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v0, %v0, %v1, %vm2
; CHECK-NEXT:    lvs %s0, %v0(0)
; CHECK-NEXT:    srl %s0, %s0, 32
; CHECK-NEXT:    # kill: def $sw0 killed $sw0 killed $sx0
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    cmpu.w %s1, %s0, %s3
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s3
; CHECK-NEXT:    cmov.w.lt %s0, %s2, %s1
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    b.l.t (, %s10)
  %r = call i32 @llvm.vp.reduce.umin.v512i32(i32 %s, <512 x i32> %v, <512 x i1> %m, i32 %n)
  ret i32 %r
}

define fastcc i32 @test_reduce_umax(i32 %s, <512 x i32> %v, <512 x i1> %m, i32 %n) {
; TODO: map to smax
; CHECK-LABEL: test_reduce_umax:
; CHECK:       # %bb.0:
; CHECK-NEXT:    andm %vm1, %vm0, %vm2
; CHECK-NEXT:    andm %vm4, %vm0, %vm3
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    or %s3, 0, %s0
; CHECK-NEXT:    or %s0, 0, (0)1
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    and %s0, %s0, (32)0
; CHECK-NEXT:    or %s1, %s0, %s1
; CHECK-NEXT:    lea %s0, 256
; CHECK-NEXT:    # kill: def $sw0 killed $sw0 killed $sx0
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    pvbrd %v1, %s1
; CHECK-NEXT:    vmrg.w %v1, %v1, %v0, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v1
; CHECK-NEXT:    lea %s1, 129
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lea %s4, 128
; CHECK-NEXT:    lvs %s4, %v2(%s4)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v0
; CHECK-NEXT:    lsv %v0(0), %s5
; CHECK-NEXT:    lsv %v0(0), %s4
; CHECK-NEXT:    lsv %v0(1), %s2
; CHECK-NEXT:    lsv %v0(1), %s1
; CHECK-NEXT:    lea %s1, 130
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(2), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(2), %s1
; CHECK-NEXT:    lea %s1, 131
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(3), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(3), %s1
; CHECK-NEXT:    lea %s1, 132
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(4), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(4), %s1
; CHECK-NEXT:    lea %s1, 133
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(5), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(5), %s1
; CHECK-NEXT:    lea %s1, 134
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(6), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(6), %s1
; CHECK-NEXT:    lea %s1, 135
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(7), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(7), %s1
; CHECK-NEXT:    lea %s1, 136
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(8), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(8), %s1
; CHECK-NEXT:    lea %s1, 137
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(9), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(9), %s1
; CHECK-NEXT:    lea %s1, 138
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(10), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(10), %s1
; CHECK-NEXT:    lea %s1, 139
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(11), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(11), %s1
; CHECK-NEXT:    lea %s1, 140
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(12), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(12), %s1
; CHECK-NEXT:    lea %s1, 141
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(13), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(13), %s1
; CHECK-NEXT:    lea %s1, 142
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(14), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(14), %s1
; CHECK-NEXT:    lea %s1, 143
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(15), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(15), %s1
; CHECK-NEXT:    lea %s1, 144
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(16), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(16), %s1
; CHECK-NEXT:    lea %s1, 145
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(17), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(17), %s1
; CHECK-NEXT:    lea %s1, 146
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(18), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(18), %s1
; CHECK-NEXT:    lea %s1, 147
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(19), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(19), %s1
; CHECK-NEXT:    lea %s1, 148
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(20), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(20), %s1
; CHECK-NEXT:    lea %s1, 149
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(21), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(21), %s1
; CHECK-NEXT:    lea %s1, 150
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(22), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(22), %s1
; CHECK-NEXT:    lea %s1, 151
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(23), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(23), %s1
; CHECK-NEXT:    lea %s1, 152
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(24), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(24), %s1
; CHECK-NEXT:    lea %s1, 153
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(25), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(25), %s1
; CHECK-NEXT:    lea %s1, 154
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(26), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(26), %s1
; CHECK-NEXT:    lea %s1, 155
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(27), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(27), %s1
; CHECK-NEXT:    lea %s1, 156
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(28), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(28), %s1
; CHECK-NEXT:    lea %s1, 157
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(29), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(29), %s1
; CHECK-NEXT:    lea %s1, 158
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(30), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(30), %s1
; CHECK-NEXT:    lea %s1, 159
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(31), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(31), %s1
; CHECK-NEXT:    lea %s1, 160
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(32), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(32), %s1
; CHECK-NEXT:    lea %s1, 161
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(33), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(33), %s1
; CHECK-NEXT:    lea %s1, 162
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(34), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(34), %s1
; CHECK-NEXT:    lea %s1, 163
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(35), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(35), %s1
; CHECK-NEXT:    lea %s1, 164
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(36), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(36), %s1
; CHECK-NEXT:    lea %s1, 165
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(37), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(37), %s1
; CHECK-NEXT:    lea %s1, 166
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(38), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(38), %s1
; CHECK-NEXT:    lea %s1, 167
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(39), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(39), %s1
; CHECK-NEXT:    lea %s1, 168
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(40), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(40), %s1
; CHECK-NEXT:    lea %s1, 169
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(41), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(41), %s1
; CHECK-NEXT:    lea %s1, 170
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(42), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(42), %s1
; CHECK-NEXT:    lea %s1, 171
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(43), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(43), %s1
; CHECK-NEXT:    lea %s1, 172
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(44), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(44), %s1
; CHECK-NEXT:    lea %s1, 173
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(45), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(45), %s1
; CHECK-NEXT:    lea %s1, 174
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(46), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(46), %s1
; CHECK-NEXT:    lea %s1, 175
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(47), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(47), %s1
; CHECK-NEXT:    lea %s1, 176
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(48), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(48), %s1
; CHECK-NEXT:    lea %s1, 177
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(49), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(49), %s1
; CHECK-NEXT:    lea %s1, 178
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(50), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(50), %s1
; CHECK-NEXT:    lea %s1, 179
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(51), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(51), %s1
; CHECK-NEXT:    lea %s1, 180
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(52), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(52), %s1
; CHECK-NEXT:    lea %s1, 181
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(53), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(53), %s1
; CHECK-NEXT:    lea %s1, 182
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(54), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(54), %s1
; CHECK-NEXT:    lea %s1, 183
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(55), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(55), %s1
; CHECK-NEXT:    lea %s1, 184
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(56), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(56), %s1
; CHECK-NEXT:    lea %s1, 185
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(57), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(57), %s1
; CHECK-NEXT:    lea %s1, 186
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(58), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(58), %s1
; CHECK-NEXT:    lea %s1, 187
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(59), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(59), %s1
; CHECK-NEXT:    lea %s1, 188
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(60), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(60), %s1
; CHECK-NEXT:    lea %s1, 189
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(61), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(61), %s1
; CHECK-NEXT:    lea %s1, 190
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(62), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(62), %s1
; CHECK-NEXT:    lea %s1, 191
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(63), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(63), %s1
; CHECK-NEXT:    lea %s1, 192
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(64), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(64), %s1
; CHECK-NEXT:    lea %s1, 193
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(65), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(65), %s1
; CHECK-NEXT:    lea %s1, 194
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(66), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(66), %s1
; CHECK-NEXT:    lea %s1, 195
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(67), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(67), %s1
; CHECK-NEXT:    lea %s1, 196
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(68), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(68), %s1
; CHECK-NEXT:    lea %s1, 197
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(69), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(69), %s1
; CHECK-NEXT:    lea %s1, 198
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(70), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(70), %s1
; CHECK-NEXT:    lea %s1, 199
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(71), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(71), %s1
; CHECK-NEXT:    lea %s1, 200
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(72), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(72), %s1
; CHECK-NEXT:    lea %s1, 201
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(73), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(73), %s1
; CHECK-NEXT:    lea %s1, 202
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(74), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(74), %s1
; CHECK-NEXT:    lea %s1, 203
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(75), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(75), %s1
; CHECK-NEXT:    lea %s1, 204
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(76), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(76), %s1
; CHECK-NEXT:    lea %s1, 205
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(77), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(77), %s1
; CHECK-NEXT:    lea %s1, 206
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(78), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(78), %s1
; CHECK-NEXT:    lea %s1, 207
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(79), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(79), %s1
; CHECK-NEXT:    lea %s1, 208
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(80), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(80), %s1
; CHECK-NEXT:    lea %s1, 209
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(81), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(81), %s1
; CHECK-NEXT:    lea %s1, 210
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(82), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(82), %s1
; CHECK-NEXT:    lea %s1, 211
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(83), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(83), %s1
; CHECK-NEXT:    lea %s1, 212
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(84), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(84), %s1
; CHECK-NEXT:    lea %s1, 213
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(85), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(85), %s1
; CHECK-NEXT:    lea %s1, 214
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(86), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(86), %s1
; CHECK-NEXT:    lea %s1, 215
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(87), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(87), %s1
; CHECK-NEXT:    lea %s1, 216
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(88), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(88), %s1
; CHECK-NEXT:    lea %s1, 217
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(89), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(89), %s1
; CHECK-NEXT:    lea %s1, 218
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(90), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(90), %s1
; CHECK-NEXT:    lea %s1, 219
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(91), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(91), %s1
; CHECK-NEXT:    lea %s1, 220
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(92), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(92), %s1
; CHECK-NEXT:    lea %s1, 221
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(93), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(93), %s1
; CHECK-NEXT:    lea %s1, 222
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(94), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(94), %s1
; CHECK-NEXT:    lea %s1, 223
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(95), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(95), %s1
; CHECK-NEXT:    lea %s1, 224
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(96), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(96), %s1
; CHECK-NEXT:    lea %s1, 225
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(97), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(97), %s1
; CHECK-NEXT:    lea %s1, 226
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(98), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(98), %s1
; CHECK-NEXT:    lea %s1, 227
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(99), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(99), %s1
; CHECK-NEXT:    lea %s1, 228
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(100), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(100), %s1
; CHECK-NEXT:    lea %s1, 229
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(101), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(101), %s1
; CHECK-NEXT:    lea %s1, 230
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(102), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(102), %s1
; CHECK-NEXT:    lea %s1, 231
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(103), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(103), %s1
; CHECK-NEXT:    lea %s1, 232
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(104), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(104), %s1
; CHECK-NEXT:    lea %s1, 233
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(105), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(105), %s1
; CHECK-NEXT:    lea %s1, 234
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(106), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(106), %s1
; CHECK-NEXT:    lea %s1, 235
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(107), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(107), %s1
; CHECK-NEXT:    lea %s1, 236
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(108), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(108), %s1
; CHECK-NEXT:    lea %s1, 237
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(109), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(109), %s1
; CHECK-NEXT:    lea %s1, 238
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(110), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(110), %s1
; CHECK-NEXT:    lea %s1, 239
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(111), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(111), %s1
; CHECK-NEXT:    lea %s1, 240
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(112), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(112), %s1
; CHECK-NEXT:    lea %s1, 241
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(113), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(113), %s1
; CHECK-NEXT:    lea %s1, 242
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(114), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(114), %s1
; CHECK-NEXT:    lea %s1, 243
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(115), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(115), %s1
; CHECK-NEXT:    lea %s1, 244
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(116), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(116), %s1
; CHECK-NEXT:    lea %s1, 245
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(117), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(117), %s1
; CHECK-NEXT:    lea %s1, 246
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(118), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(118), %s1
; CHECK-NEXT:    lea %s1, 247
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(119), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(119), %s1
; CHECK-NEXT:    lea %s1, 248
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(120), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(120), %s1
; CHECK-NEXT:    lea %s1, 249
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(121), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(121), %s1
; CHECK-NEXT:    lea %s1, 250
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(122), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(122), %s1
; CHECK-NEXT:    lea %s1, 251
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(123), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(123), %s1
; CHECK-NEXT:    lea %s1, 252
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(124), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(124), %s1
; CHECK-NEXT:    lea %s1, 253
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(125), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(125), %s1
; CHECK-NEXT:    lea %s1, 254
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(126), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(126), %s1
; CHECK-NEXT:    lea %s1, 255
; CHECK-NEXT:    lvs %s1, %v2(%s1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(127), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(127), %s1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v0, %v0, 0
; CHECK-NEXT:    vshf %v2, %v1, %v1, 0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.gt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v0
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.gt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v0, %v0, %v1, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v0
; CHECK-NEXT:    lvs %s1, %v2(65)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lvs %s4, %v2(64)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v1
; CHECK-NEXT:    lsv %v1(0), %s5
; CHECK-NEXT:    lsv %v1(0), %s4
; CHECK-NEXT:    lsv %v1(1), %s2
; CHECK-NEXT:    lsv %v1(1), %s1
; CHECK-NEXT:    lvs %s1, %v2(66)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(2), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(2), %s1
; CHECK-NEXT:    lvs %s1, %v2(67)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(3), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(3), %s1
; CHECK-NEXT:    lvs %s1, %v2(68)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(4), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(4), %s1
; CHECK-NEXT:    lvs %s1, %v2(69)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(5), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(5), %s1
; CHECK-NEXT:    lvs %s1, %v2(70)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(6), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(6), %s1
; CHECK-NEXT:    lvs %s1, %v2(71)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(7), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(7), %s1
; CHECK-NEXT:    lvs %s1, %v2(72)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(8), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(8), %s1
; CHECK-NEXT:    lvs %s1, %v2(73)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(9), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(9), %s1
; CHECK-NEXT:    lvs %s1, %v2(74)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(10), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(10), %s1
; CHECK-NEXT:    lvs %s1, %v2(75)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(11), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(11), %s1
; CHECK-NEXT:    lvs %s1, %v2(76)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(12), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(12), %s1
; CHECK-NEXT:    lvs %s1, %v2(77)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(13), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(13), %s1
; CHECK-NEXT:    lvs %s1, %v2(78)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(14), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(14), %s1
; CHECK-NEXT:    lvs %s1, %v2(79)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(15), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(15), %s1
; CHECK-NEXT:    lvs %s1, %v2(80)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(16), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(16), %s1
; CHECK-NEXT:    lvs %s1, %v2(81)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(17), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(17), %s1
; CHECK-NEXT:    lvs %s1, %v2(82)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(18), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(18), %s1
; CHECK-NEXT:    lvs %s1, %v2(83)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(19), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(19), %s1
; CHECK-NEXT:    lvs %s1, %v2(84)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(20), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(20), %s1
; CHECK-NEXT:    lvs %s1, %v2(85)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(21), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(21), %s1
; CHECK-NEXT:    lvs %s1, %v2(86)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(22), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(22), %s1
; CHECK-NEXT:    lvs %s1, %v2(87)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(23), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(23), %s1
; CHECK-NEXT:    lvs %s1, %v2(88)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(24), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(24), %s1
; CHECK-NEXT:    lvs %s1, %v2(89)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(25), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(25), %s1
; CHECK-NEXT:    lvs %s1, %v2(90)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(26), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(26), %s1
; CHECK-NEXT:    lvs %s1, %v2(91)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(27), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(27), %s1
; CHECK-NEXT:    lvs %s1, %v2(92)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(28), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(28), %s1
; CHECK-NEXT:    lvs %s1, %v2(93)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(29), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(29), %s1
; CHECK-NEXT:    lvs %s1, %v2(94)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(30), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(30), %s1
; CHECK-NEXT:    lvs %s1, %v2(95)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(31), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(31), %s1
; CHECK-NEXT:    lvs %s1, %v2(96)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(32), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(32), %s1
; CHECK-NEXT:    lvs %s1, %v2(97)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(33), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(33), %s1
; CHECK-NEXT:    lvs %s1, %v2(98)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(34), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(34), %s1
; CHECK-NEXT:    lvs %s1, %v2(99)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(35), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(35), %s1
; CHECK-NEXT:    lvs %s1, %v2(100)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(36), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(36), %s1
; CHECK-NEXT:    lvs %s1, %v2(101)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(37), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(37), %s1
; CHECK-NEXT:    lvs %s1, %v2(102)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(38), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(38), %s1
; CHECK-NEXT:    lvs %s1, %v2(103)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(39), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(39), %s1
; CHECK-NEXT:    lvs %s1, %v2(104)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(40), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(40), %s1
; CHECK-NEXT:    lvs %s1, %v2(105)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(41), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(41), %s1
; CHECK-NEXT:    lvs %s1, %v2(106)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(42), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(42), %s1
; CHECK-NEXT:    lvs %s1, %v2(107)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(43), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(43), %s1
; CHECK-NEXT:    lvs %s1, %v2(108)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(44), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(44), %s1
; CHECK-NEXT:    lvs %s1, %v2(109)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(45), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(45), %s1
; CHECK-NEXT:    lvs %s1, %v2(110)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(46), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(46), %s1
; CHECK-NEXT:    lvs %s1, %v2(111)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(47), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(47), %s1
; CHECK-NEXT:    lvs %s1, %v2(112)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(48), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(48), %s1
; CHECK-NEXT:    lvs %s1, %v2(113)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(49), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(49), %s1
; CHECK-NEXT:    lvs %s1, %v2(114)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(50), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(50), %s1
; CHECK-NEXT:    lvs %s1, %v2(115)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(51), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(51), %s1
; CHECK-NEXT:    lvs %s1, %v2(116)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(52), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(52), %s1
; CHECK-NEXT:    lvs %s1, %v2(117)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(53), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(53), %s1
; CHECK-NEXT:    lvs %s1, %v2(118)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(54), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(54), %s1
; CHECK-NEXT:    lvs %s1, %v2(119)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(55), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(55), %s1
; CHECK-NEXT:    lvs %s1, %v2(120)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(56), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(56), %s1
; CHECK-NEXT:    lvs %s1, %v2(121)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(57), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(57), %s1
; CHECK-NEXT:    lvs %s1, %v2(122)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(58), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(58), %s1
; CHECK-NEXT:    lvs %s1, %v2(123)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(59), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(59), %s1
; CHECK-NEXT:    lvs %s1, %v2(124)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(60), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(60), %s1
; CHECK-NEXT:    lvs %s1, %v2(125)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(61), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(61), %s1
; CHECK-NEXT:    lvs %s1, %v2(126)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(62), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(62), %s1
; CHECK-NEXT:    lvs %s1, %v2(127)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(63), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(63), %s1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v1, %v1, 0
; CHECK-NEXT:    vshf %v2, %v0, %v0, 0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.gt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v1
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v0
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.gt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v1, %v1, %v0, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v1
; CHECK-NEXT:    lvs %s1, %v2(33)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lvs %s4, %v2(32)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v0
; CHECK-NEXT:    lsv %v0(0), %s5
; CHECK-NEXT:    lsv %v0(0), %s4
; CHECK-NEXT:    lsv %v0(1), %s2
; CHECK-NEXT:    lsv %v0(1), %s1
; CHECK-NEXT:    lvs %s1, %v2(34)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(2), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(2), %s1
; CHECK-NEXT:    lvs %s1, %v2(35)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(3), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(3), %s1
; CHECK-NEXT:    lvs %s1, %v2(36)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(4), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(4), %s1
; CHECK-NEXT:    lvs %s1, %v2(37)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(5), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(5), %s1
; CHECK-NEXT:    lvs %s1, %v2(38)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(6), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(6), %s1
; CHECK-NEXT:    lvs %s1, %v2(39)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(7), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(7), %s1
; CHECK-NEXT:    lvs %s1, %v2(40)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(8), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(8), %s1
; CHECK-NEXT:    lvs %s1, %v2(41)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(9), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(9), %s1
; CHECK-NEXT:    lvs %s1, %v2(42)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(10), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(10), %s1
; CHECK-NEXT:    lvs %s1, %v2(43)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(11), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(11), %s1
; CHECK-NEXT:    lvs %s1, %v2(44)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(12), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(12), %s1
; CHECK-NEXT:    lvs %s1, %v2(45)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(13), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(13), %s1
; CHECK-NEXT:    lvs %s1, %v2(46)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(14), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(14), %s1
; CHECK-NEXT:    lvs %s1, %v2(47)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(15), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(15), %s1
; CHECK-NEXT:    lvs %s1, %v2(48)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(16), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(16), %s1
; CHECK-NEXT:    lvs %s1, %v2(49)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(17), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(17), %s1
; CHECK-NEXT:    lvs %s1, %v2(50)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(18), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(18), %s1
; CHECK-NEXT:    lvs %s1, %v2(51)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(19), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(19), %s1
; CHECK-NEXT:    lvs %s1, %v2(52)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(20), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(20), %s1
; CHECK-NEXT:    lvs %s1, %v2(53)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(21), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(21), %s1
; CHECK-NEXT:    lvs %s1, %v2(54)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(22), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(22), %s1
; CHECK-NEXT:    lvs %s1, %v2(55)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(23), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(23), %s1
; CHECK-NEXT:    lvs %s1, %v2(56)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(24), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(24), %s1
; CHECK-NEXT:    lvs %s1, %v2(57)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(25), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(25), %s1
; CHECK-NEXT:    lvs %s1, %v2(58)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(26), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(26), %s1
; CHECK-NEXT:    lvs %s1, %v2(59)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(27), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(27), %s1
; CHECK-NEXT:    lvs %s1, %v2(60)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(28), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(28), %s1
; CHECK-NEXT:    lvs %s1, %v2(61)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(29), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(29), %s1
; CHECK-NEXT:    lvs %s1, %v2(62)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(30), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(30), %s1
; CHECK-NEXT:    lvs %s1, %v2(63)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(31), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(31), %s1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v0, %v0, 0
; CHECK-NEXT:    vshf %v2, %v1, %v1, 0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.gt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v0
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.gt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v0, %v0, %v1, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v0
; CHECK-NEXT:    lvs %s1, %v2(17)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lvs %s4, %v2(16)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v1
; CHECK-NEXT:    lsv %v1(0), %s5
; CHECK-NEXT:    lsv %v1(0), %s4
; CHECK-NEXT:    lsv %v1(1), %s2
; CHECK-NEXT:    lsv %v1(1), %s1
; CHECK-NEXT:    lvs %s1, %v2(18)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(2), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(2), %s1
; CHECK-NEXT:    lvs %s1, %v2(19)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(3), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(3), %s1
; CHECK-NEXT:    lvs %s1, %v2(20)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(4), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(4), %s1
; CHECK-NEXT:    lvs %s1, %v2(21)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(5), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(5), %s1
; CHECK-NEXT:    lvs %s1, %v2(22)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(6), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(6), %s1
; CHECK-NEXT:    lvs %s1, %v2(23)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(7), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(7), %s1
; CHECK-NEXT:    lvs %s1, %v2(24)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(8), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(8), %s1
; CHECK-NEXT:    lvs %s1, %v2(25)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(9), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(9), %s1
; CHECK-NEXT:    lvs %s1, %v2(26)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(10), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(10), %s1
; CHECK-NEXT:    lvs %s1, %v2(27)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(11), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(11), %s1
; CHECK-NEXT:    lvs %s1, %v2(28)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(12), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(12), %s1
; CHECK-NEXT:    lvs %s1, %v2(29)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(13), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(13), %s1
; CHECK-NEXT:    lvs %s1, %v2(30)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(14), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(14), %s1
; CHECK-NEXT:    lvs %s1, %v2(31)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(15), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(15), %s1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v1, %v1, 0
; CHECK-NEXT:    vshf %v2, %v0, %v0, 0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.gt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v1
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v0
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.gt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v1, %v1, %v0, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v1
; CHECK-NEXT:    lvs %s1, %v2(9)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lvs %s4, %v2(8)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v0
; CHECK-NEXT:    lsv %v0(0), %s5
; CHECK-NEXT:    lsv %v0(0), %s4
; CHECK-NEXT:    lsv %v0(1), %s2
; CHECK-NEXT:    lsv %v0(1), %s1
; CHECK-NEXT:    lvs %s1, %v2(10)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(2), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(2), %s1
; CHECK-NEXT:    lvs %s1, %v2(11)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(3), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(3), %s1
; CHECK-NEXT:    lvs %s1, %v2(12)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(4), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(4), %s1
; CHECK-NEXT:    lvs %s1, %v2(13)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(5), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(5), %s1
; CHECK-NEXT:    lvs %s1, %v2(14)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(6), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(6), %s1
; CHECK-NEXT:    lvs %s1, %v2(15)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v0(7), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v0(7), %s1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v0, %v0, 0
; CHECK-NEXT:    vshf %v2, %v1, %v1, 0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.gt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v0
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.gt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v0, %v0, %v1, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v0
; CHECK-NEXT:    lvs %s1, %v2(5)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lvs %s4, %v2(4)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v1
; CHECK-NEXT:    lsv %v1(0), %s5
; CHECK-NEXT:    lsv %v1(0), %s4
; CHECK-NEXT:    lsv %v1(1), %s2
; CHECK-NEXT:    lsv %v1(1), %s1
; CHECK-NEXT:    lvs %s1, %v2(6)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(2), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(2), %s1
; CHECK-NEXT:    lvs %s1, %v2(7)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    lsv %v1(3), %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lsv %v1(3), %s1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v1, %v1, 0
; CHECK-NEXT:    vshf %v2, %v0, %v0, 0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.gt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v1
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v0
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.gt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v1, %v1, %v0, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v0, (0)1, %v1
; CHECK-NEXT:    lvs %s1, %v0(3)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    lvs %s4, %v0(2)
; CHECK-NEXT:    srl %s5, %s4, 32
; CHECK-NEXT:    # kill: def $sw5 killed $sw5 killed $sx5
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s5, 0, %s5
; CHECK-NEXT:    or %s5, 0, %s6
; CHECK-NEXT:    sll %s5, %s5, 32
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    adds.w.zx %s6, %s4, (0)1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    # kill: def $sw4 killed $sw4 killed $sx4
; CHECK-NEXT:    # implicit-def: $sx6
; CHECK-NEXT:    or %s4, 0, %s4
; CHECK-NEXT:    or %s4, 0, %s6
; CHECK-NEXT:    and %s4, %s4, (32)0
; CHECK-NEXT:    or %s4, %s4, %s5
; CHECK-NEXT:    # implicit-def: $v0
; CHECK-NEXT:    lsv %v0(0), %s5
; CHECK-NEXT:    lsv %v0(0), %s4
; CHECK-NEXT:    lsv %v0(1), %s2
; CHECK-NEXT:    lsv %v0(1), %s1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v0, %v0, 0
; CHECK-NEXT:    vshf %v2, %v1, %v1, 0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.gt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v0
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.gt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v0, %v0, %v1, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v1, (0)1, %v0
; CHECK-NEXT:    lvs %s1, %v1(1)
; CHECK-NEXT:    srl %s2, %s1, 32
; CHECK-NEXT:    # kill: def $sw2 killed $sw2 killed $sx2
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s2, 0, %s2
; CHECK-NEXT:    or %s2, 0, %s4
; CHECK-NEXT:    sll %s2, %s2, 32
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s4, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx4
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s4
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    or %s1, %s1, %s2
; CHECK-NEXT:    # implicit-def: $v1
; CHECK-NEXT:    lsv %v1(0), %s2
; CHECK-NEXT:    lsv %v1(0), %s1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v3, %v1, %v1, 0
; CHECK-NEXT:    vshf %v2, %v0, %v0, 0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.gt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v1
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v0
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.gt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v1, %v1, %v0, %vm2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v0, (0)1, %v1
; CHECK-NEXT:    lvs %s1, %v0(0)
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    adds.w.zx %s2, %s1, (0)1
; CHECK-NEXT:    # implicit-def: $sx1
; CHECK-NEXT:    or %s1, 0, %s2
; CHECK-NEXT:    # kill: def $sw1 killed $sw1 killed $sx1
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s1, 0, %s1
; CHECK-NEXT:    or %s1, 0, %s2
; CHECK-NEXT:    sll %s1, %s1, 32
; CHECK-NEXT:    # implicit-def: $v0
; CHECK-NEXT:    lsv %v0(0), %s1
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vshf %v2, %v1, %v1, 0
; CHECK-NEXT:    vshf %v3, %v0, %v0, 0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.gt %vm1, %v2
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v2, (0)1, %v1
; CHECK-NEXT:    lea %s16, 256
; CHECK-NEXT:    lvl %s16
; CHECK-NEXT:    vor %v3, (0)1, %v0
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vcmpu.w %v2, %v2, %v3
; CHECK-NEXT:    vfmk.w.gt %vm4, %v2
; CHECK-NEXT:    # implicit-def: $vmp1
; CHECK-NEXT:    andm %vm3, %vm0, %vm4
; CHECK-NEXT:    andm %vm2, %vm0, %vm1
; CHECK-NEXT:    vmrg.w %v0, %v0, %v1, %vm2
; CHECK-NEXT:    lvs %s0, %v0(0)
; CHECK-NEXT:    srl %s0, %s0, 32
; CHECK-NEXT:    # kill: def $sw0 killed $sw0 killed $sx0
; CHECK-NEXT:    # implicit-def: $sx2
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    cmpu.w %s1, %s0, %s3
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s3
; CHECK-NEXT:    cmov.w.gt %s0, %s2, %s1
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    # implicit-def: $sx0
; CHECK-NEXT:    or %s0, 0, %s1
; CHECK-NEXT:    b.l.t (, %s10)
  %r = call i32 @llvm.vp.reduce.umax.v512i32(i32 %s, <512 x i32> %v, <512 x i1> %m, i32 %n)
  ret i32 %r
}

declare float @llvm.vp.reduce.fadd.v512f32(float, <512 x float>, <512 x i1>, i32)
declare float @llvm.vp.reduce.fmul.v512f32(float, <512 x float>, <512 x i1>, i32)
declare float @llvm.vp.reduce.fmin.v512f32(float, <512 x float>, <512 x i1>, i32)
declare float @llvm.vp.reduce.fmax.v512f32(float, <512 x float>, <512 x i1>, i32)
declare i32 @llvm.vp.reduce.add.v512i32(i32, <512 x i32>, <512 x i1>, i32)
declare i32 @llvm.vp.reduce.mul.v512i32(i32, <512 x i32>, <512 x i1>, i32)
declare i32 @llvm.vp.reduce.and.v512i32(i32, <512 x i32>, <512 x i1>, i32)
declare i32 @llvm.vp.reduce.xor.v512i32(i32, <512 x i32>, <512 x i1>, i32)
declare i32 @llvm.vp.reduce.or.v512i32(i32, <512 x i32>, <512 x i1>, i32)
declare i32 @llvm.vp.reduce.smax.v512i32(i32, <512 x i32> %v, <512 x i1> %m, i32 %n)
declare i32 @llvm.vp.reduce.smin.v512i32(i32, <512 x i32> %v, <512 x i1> %m, i32 %n)
declare i32 @llvm.vp.reduce.umax.v512i32(i32, <512 x i32> %v, <512 x i1> %m, i32 %n)
declare i32 @llvm.vp.reduce.umin.v512i32(i32, <512 x i32> %v, <512 x i1> %m, i32 %n)
