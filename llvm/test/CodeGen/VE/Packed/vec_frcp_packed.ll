; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=ve-unknown-unknown -mattr=+vpu | FileCheck %s


;; 256 x double

; Function Attrs: nounwind
define fastcc <256 x double> @vec_no_frcp_v256f64(<256 x double> %x) {
; CHECK-LABEL: vec_no_frcp_v256f64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    lea %s0, 256
; CHECK-NEXT:    lea.sl %s1, 1072693248
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vfdiv.d %v0, %s1, %v0
; CHECK-NEXT:    b.l.t (, %s10)
  %sz = insertelement <256 x double> undef, double 1.0, i32 0
  %vone = shufflevector <256 x double> %sz, <256 x double> poison, <256 x i32> zeroinitializer
  %r = fdiv <256 x double> %vone, %x
  ret <256 x double> %r
}

; Function Attrs: nounwind
define fastcc <256 x double> @vec_frcp_v256f64(<256 x double> %x) {
; CHECK-LABEL: vec_frcp_v256f64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    lea %s0, 256
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vrcp.d %v0, %v0
; CHECK-NEXT:    b.l.t (, %s10)
  %sz = insertelement <256 x double> undef, double 1.0, i32 0
  %vone = shufflevector <256 x double> %sz, <256 x double> poison, <256 x i32> zeroinitializer
  %r = fdiv arcp <256 x double> %vone, %x
  ret <256 x double> %r
}

;; 256 x float

; Function Attrs: nounwind
define fastcc <256 x float> @vec_no_frcp_v256f32(<256 x float> %x) {
; CHECK-LABEL: vec_no_frcp_v256f32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    lea %s0, 256
; CHECK-NEXT:    lea.sl %s1, 1065353216
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vfdiv.s %v0, %s1, %v0
; CHECK-NEXT:    b.l.t (, %s10)
  %sz = insertelement <256 x float> undef, float 1.0, i32 0
  %vone = shufflevector <256 x float> %sz, <256 x float> poison, <256 x i32> zeroinitializer
  %r = fdiv <256 x float> %vone, %x
  ret <256 x float> %r
}

; Function Attrs: nounwind
define fastcc <256 x float> @vec_frcp_v256f32(<256 x float> %x) {
; CHECK-LABEL: vec_frcp_v256f32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    lea %s0, 256
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vrcp.s %v0, %v0
; CHECK-NEXT:    b.l.t (, %s10)
  %sz = insertelement <256 x float> undef, float 1.0, i32 0
  %vone = shufflevector <256 x float> %sz, <256 x float> poison, <256 x i32> zeroinitializer
  %r = fdiv arcp <256 x float> %vone, %x
  ret <256 x float> %r
}

;; 512 x float

; Function Attrs: nounwind
define fastcc <512 x float> @vec_no_frcp_v512f64(<512 x float> %x) {
; CHECK-LABEL: vec_no_frcp_v512f64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    lea %s0, 256
; CHECK-NEXT:    lea.sl %s1, 1065353216
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    vfdiv.s %v1, %s1, %v0
; CHECK-NEXT:    vshf %v0, %v0, %v0, 4
; CHECK-NEXT:    vfdiv.s %v0, %s1, %v0
; CHECK-NEXT:    vshf %v0, %v0, %v1, 8
; CHECK-NEXT:    b.l.t (, %s10)
  %sz = insertelement <512 x float> undef, float 1.0, i32 0
  %vone = shufflevector <512 x float> %sz, <512 x float> poison, <512 x i32> zeroinitializer
  %r = fdiv <512 x float> %vone, %x
  ret <512 x float> %r
}

; Function Attrs: nounwind
define fastcc <512 x float> @vec_frcp_v512f64(<512 x float> %x) {
; CHECK-LABEL: vec_frcp_v512f64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    lea %s0, 256
; CHECK-NEXT:    lvl %s0
; CHECK-NEXT:    pvrcp %v0, %v0
; CHECK-NEXT:    b.l.t (, %s10)
  %sz = insertelement <512 x float> undef, float 1.0, i32 0
  %vone = shufflevector <512 x float> %sz, <512 x float> poison, <512 x i32> zeroinitializer
  %r = fdiv arcp <512 x float> %vone, %x
  ret <512 x float> %r
}
